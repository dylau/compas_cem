Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/compas_cem.viewers", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.ToString", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.sha256", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.ToString", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.sha256", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.ToString", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.sha256", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.ToString", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.sha256", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.ToString", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.sha256", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.ToString", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.sha256", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.ToString", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.index_parameter", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.parameter_index", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.sha256", "api/generated/compas_cem.optimization.Optimizer.solve_nlopt", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.ToString", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.sha256", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.ToString", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.sha256", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_nlopt_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.Plotter", "api/generated/compas_cem.plotters.Plotter.add", "api/generated/compas_cem.plotters.Plotter.add_from_list", "api/generated/compas_cem.plotters.Plotter.draw", "api/generated/compas_cem.plotters.Plotter.find", "api/generated/compas_cem.plotters.Plotter.on", "api/generated/compas_cem.plotters.Plotter.pause", "api/generated/compas_cem.plotters.Plotter.redraw", "api/generated/compas_cem.plotters.Plotter.register_listener", "api/generated/compas_cem.plotters.Plotter.save", "api/generated/compas_cem.plotters.Plotter.show", "api/generated/compas_cem.plotters.Plotter.zoom_extents", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.ToString", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.sha256", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/compas_cem.viewers.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.ToString.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.sha256.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.ToString.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.sha256.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.ToString.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.sha256.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.ToString.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.sha256.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.ToString.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.sha256.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.ToString.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.sha256.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.ToString.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.index_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.parameter_index.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.sha256.rst", "api/generated/compas_cem.optimization.Optimizer.solve_nlopt.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.ToString.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.sha256.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.ToString.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.sha256.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_nlopt_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.Plotter.rst", "api/generated/compas_cem.plotters.Plotter.add.rst", "api/generated/compas_cem.plotters.Plotter.add_from_list.rst", "api/generated/compas_cem.plotters.Plotter.draw.rst", "api/generated/compas_cem.plotters.Plotter.find.rst", "api/generated/compas_cem.plotters.Plotter.on.rst", "api/generated/compas_cem.plotters.Plotter.pause.rst", "api/generated/compas_cem.plotters.Plotter.redraw.rst", "api/generated/compas_cem.plotters.Plotter.register_listener.rst", "api/generated/compas_cem.plotters.Plotter.save.rst", "api/generated/compas_cem.plotters.Plotter.show.rst", "api/generated/compas_cem.plotters.Plotter.zoom_extents.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.ToString.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.sha256.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "compas_cem.viewers", "FormDiagram", "FormDiagram.ToString", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.sha256", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.ToString", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_max", "TopologyDiagram.sequences", "TopologyDiagram.sha256", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail_edges", "TopologyDiagram.trails", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.ToString", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.sha256", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.ToString", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.sha256", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.ToString", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.sha256", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.ToString", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.sha256", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.ToString", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.sha256", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.ToString", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.sha256", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.ToString", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.sha256", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "Optimizer", "Optimizer.ToString", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.index_parameter", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.parameter_index", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.sha256", "Optimizer.solve_nlopt", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.ToString", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.sha256", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.ToString", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.sha256", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.ToString", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.sha256", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.sha256", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.ToString", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.sha256", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.ToString", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.sha256", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.ToString", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.sha256", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.ToString", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.sha256", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_nlopt_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "Plotter", "Plotter.add", "Plotter.add_from_list", "Plotter.draw", "Plotter.find", "Plotter.on", "Plotter.pause", "Plotter.redraw", "Plotter.register_listener", "Plotter.save", "Plotter.show", "Plotter.zoom_extents", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.ToString", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.sha256", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 624, 625], "simpl": [0, 624, 625, 626], "compress": [0, 5, 623, 624, 625], "structur": [0, 30, 57, 78, 89, 97, 102, 125, 165, 194, 215, 229, 237, 242, 273, 581, 582, 584, 623, 624, 625, 626], "02": [0, 624, 625], "brace": [0, 624, 625], "tower": [0, 624, 625], "2d": [0, 6, 579, 608, 622, 624, 625], "03": [0, 624, 625], "bridg": [0, 6, 622, 624, 625], "optim": [0, 4, 5, 12, 13, 354, 370, 373, 374, 381, 387, 429, 432, 433, 440, 446, 449, 450, 457, 463, 466, 467, 474, 480, 496, 512, 528, 544, 547, 548, 555, 561, 622, 624, 625], "04": [0, 624, 625], "tree": [0, 624, 625], "05": [0, 624, 625], "planar": [0, 57, 84, 100, 194, 223, 240, 624, 625, 626], "tensegr": [0, 6, 622, 624, 625], "wheel": [0, 624, 625], "from": [1, 2, 3, 4, 5, 26, 28, 30, 35, 37, 38, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 78, 89, 96, 97, 98, 102, 109, 124, 125, 134, 156, 159, 161, 165, 170, 172, 173, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 215, 229, 236, 237, 238, 242, 249, 272, 273, 282, 303, 304, 305, 306, 307, 316, 317, 318, 319, 320, 329, 330, 331, 332, 333, 339, 340, 344, 345, 346, 347, 348, 357, 358, 359, 363, 376, 377, 378, 380, 390, 391, 392, 396, 409, 410, 411, 412, 420, 422, 435, 436, 437, 439, 452, 453, 454, 456, 469, 470, 471, 473, 483, 484, 485, 489, 499, 500, 501, 505, 515, 516, 517, 521, 531, 532, 533, 537, 550, 551, 552, 554, 566, 567, 582, 596, 597, 612, 613, 614, 615, 616, 622, 626, 627], "compa": [1, 2, 3, 4, 5, 28, 78, 124, 161, 215, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 581, 582, 616, 622, 623, 624], "geometri": [1, 2, 3, 4, 5, 57, 194, 581, 582, 584], "import": [1, 2, 3, 4, 5, 28, 78, 124, 161, 215, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616, 622, 626], "translat": [1, 2, 3, 4, 5], "compas_cem": [1, 2, 3, 4, 5, 12, 22, 150, 300, 313, 326, 339, 340, 341, 354, 370, 387, 403, 423, 429, 446, 463, 480, 496, 512, 528, 544, 561, 562, 580, 592, 609, 622, 623, 625, 626], "diagram": [1, 2, 3, 4, 5, 12, 13, 22, 57, 67, 120, 122, 150, 158, 159, 194, 260, 261, 263, 265, 266, 267, 271, 287, 339, 340, 360, 393, 403, 423, 486, 502, 518, 534, 561, 562, 568, 571, 572, 574, 575, 592, 598, 601, 604, 615, 622, 625], "topologydiagram": [1, 2, 3, 4, 5, 339, 340, 423, 561, 592, 622], "element": [1, 2, 4, 5, 12, 13, 24, 152, 300, 313, 326, 622, 625], "node": [1, 2, 3, 4, 5, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 49, 54, 59, 64, 66, 70, 71, 73, 74, 75, 76, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 129, 135, 141, 144, 145, 154, 155, 156, 158, 159, 162, 163, 164, 168, 169, 170, 171, 172, 173, 175, 177, 178, 180, 182, 183, 185, 186, 191, 196, 201, 203, 206, 207, 209, 210, 211, 212, 218, 219, 220, 221, 222, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 263, 264, 265, 268, 269, 273, 274, 275, 277, 283, 287, 291, 294, 295, 339, 340, 341, 360, 387, 393, 429, 431, 432, 433, 438, 440, 446, 448, 449, 450, 455, 457, 463, 465, 466, 467, 472, 474, 480, 486, 496, 502, 512, 518, 534, 565, 567, 568, 572, 573, 574, 595, 597, 598, 602, 603, 604, 609, 615, 622], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 57, 82, 91, 110, 120, 153, 194, 220, 231, 250, 263, 341, 347, 568, 572, 598, 602, 622, 625], "nodeload": [1, 2, 3, 4, 622], "support": [1, 2, 3, 4, 12, 13, 82, 83, 122, 123, 129, 155, 159, 220, 222, 265, 269, 277, 423, 512, 561, 575, 609, 615, 622, 625], "nodesupport": [1, 2, 3, 4, 155, 622], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 339, 340, 623, 625], "static_equilibrium": [1, 2, 3, 4, 5, 622], "plotter": [1, 2, 3, 4, 5, 12, 13, 562, 577, 592, 606, 622, 625], "instanti": [1, 4], "topolog": [1, 2, 3, 4, 5, 67, 120, 122, 150, 158, 159, 260, 261, 263, 265, 266, 267, 287, 339, 340, 373, 374, 381, 412, 416, 423, 432, 433, 440, 449, 450, 457, 466, 467, 474, 547, 548, 555, 561, 592, 598, 601, 604, 622], "add": [1, 2, 3, 4, 5, 24, 25, 152, 154, 155, 405, 406, 582], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 47, 124, 126, 127, 183, 272, 274, 275, 307, 313, 320, 333, 341, 348, 354, 363, 380, 387, 396, 422, 439, 456, 473, 480, 489, 496, 505, 512, 521, 528, 537, 554, 589, 616, 626], "1": [1, 2, 3, 4, 5, 28, 47, 48, 68, 69, 70, 71, 89, 92, 102, 109, 112, 124, 127, 161, 183, 184, 204, 205, 206, 207, 229, 232, 242, 249, 252, 272, 275, 307, 320, 333, 341, 348, 354, 363, 380, 387, 396, 422, 439, 456, 473, 480, 489, 496, 505, 512, 521, 528, 537, 554, 588, 589, 616], "2": [1, 2, 3, 4, 5, 54, 118, 191, 259, 588, 589], "5": [1, 2, 3, 4, 5, 47, 126, 127, 183, 274, 275], "3": [1, 2, 4, 5, 66, 68, 69, 70, 71, 203, 204, 205, 206, 207], "edg": [1, 2, 3, 4, 5, 24, 28, 29, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 64, 68, 69, 71, 74, 77, 79, 84, 85, 100, 101, 119, 127, 135, 140, 142, 143, 147, 152, 157, 161, 162, 163, 164, 167, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 196, 201, 204, 205, 207, 210, 213, 214, 216, 217, 223, 224, 225, 240, 241, 261, 262, 266, 275, 283, 286, 290, 292, 293, 297, 300, 306, 326, 332, 354, 360, 370, 372, 373, 374, 379, 381, 393, 486, 502, 518, 528, 534, 544, 546, 547, 548, 553, 555, 565, 566, 568, 570, 571, 595, 596, 598, 600, 601, 622], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 44, 45, 127, 180, 181, 275, 326, 354, 544, 622, 625], "forc": [1, 2, 4, 5, 43, 57, 82, 91, 123, 179, 194, 220, 231, 269, 300, 370, 512, 528, 572, 575, 622, 625], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 564, 594, 622, 626], "trail": [1, 2, 3, 4, 5, 24, 152, 155, 157, 158, 159, 164, 174, 214, 225, 260, 266, 267, 268, 286, 326, 528, 544, 622], "automat": [1, 159, 622, 623, 625, 626], "build_trail": [1, 2, 3, 4, 5, 622], "comput": [1, 4, 5, 111, 119, 121, 124, 159, 251, 262, 264, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 579, 608, 616, 622], "state": [1, 4, 5, 326], "static": [1, 4, 5, 339, 340, 563, 564, 569, 576, 577, 593, 594, 599, 605, 606, 625], "form": [1, 2, 3, 4, 5, 22, 53, 67, 68, 117, 150, 190, 204, 258, 339, 340, 360, 393, 403, 417, 418, 423, 486, 502, 518, 534, 561, 562, 568, 571, 574, 575, 623, 625, 626], "eta": [1, 2, 4, 5, 339, 340, 412, 416, 423, 561, 622], "1e": [1, 2, 3, 4, 5, 82, 91, 220, 231, 339, 340, 423, 561], "6": [1, 2, 3, 4, 5, 82, 91, 220, 231, 339, 340, 423, 561, 626], "tmax": [1, 2, 4, 5, 339, 340, 412, 416, 423, 561, 622], "100": [1, 2, 3, 4, 5, 126, 274, 339, 340, 423, 561], "verbos": [1, 2, 339, 340], "true": [1, 2, 4, 5, 50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 99, 100, 101, 102, 114, 117, 118, 124, 131, 132, 157, 174, 187, 190, 191, 192, 207, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 239, 240, 241, 242, 255, 258, 259, 272, 279, 280, 286, 307, 309, 310, 320, 322, 323, 333, 335, 336, 348, 350, 351, 363, 366, 367, 380, 383, 384, 396, 399, 400, 422, 425, 426, 439, 442, 443, 456, 459, 460, 473, 476, 477, 489, 492, 493, 505, 508, 509, 521, 524, 525, 537, 540, 541, 554, 557, 558, 616, 618, 619], "plot": [1, 2, 3, 4, 5, 562, 578, 581, 583, 584, 585, 586, 587, 589, 590, 592, 607], "result": [1, 3, 4, 5, 26, 30, 35, 89, 96, 97, 98, 102, 156, 165, 170, 229, 236, 237, 238, 242], "scene": [1, 2, 3, 4, 5], "nodes": [1, 2, 3, 4, 5], "shift": [1, 4, 5], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show_edgetext": [1, 4], "edgetext": [1, 4], "show": [1, 2, 3, 4, 5, 626], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 26, 27, 30, 31, 35, 50, 53, 54, 58, 60, 61, 65, 78, 89, 96, 97, 98, 102, 114, 117, 118, 124, 125, 130, 131, 132, 148, 149, 156, 157, 160, 165, 166, 170, 174, 187, 190, 191, 195, 197, 198, 202, 215, 229, 236, 237, 238, 242, 255, 258, 259, 272, 273, 278, 279, 280, 286, 298, 299, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 368, 369, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 408, 409, 410, 411, 422, 424, 425, 426, 427, 428, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 494, 495, 498, 499, 500, 501, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 519, 520, 521, 523, 524, 525, 526, 527, 530, 531, 532, 533, 535, 536, 537, 539, 540, 541, 542, 543, 549, 550, 551, 552, 554, 556, 557, 558, 559, 560, 577, 578, 581, 582, 584, 606, 607, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625], "point": [2, 3, 41, 47, 55, 62, 64, 65, 66, 89, 99, 102, 133, 136, 177, 183, 192, 199, 201, 202, 203, 229, 239, 242, 281, 284, 306, 319, 332, 341, 347, 397, 490, 496, 615], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 164], "deviation_edg": [2, 3, 5, 157, 162], "kei": [2, 4, 24, 29, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 56, 64, 73, 75, 76, 77, 80, 81, 82, 83, 87, 88, 91, 92, 93, 94, 95, 103, 104, 105, 107, 109, 110, 111, 113, 114, 115, 116, 117, 123, 127, 129, 140, 141, 146, 147, 152, 157, 162, 163, 164, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 193, 201, 209, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 225, 227, 228, 231, 232, 233, 234, 235, 243, 244, 245, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 268, 269, 275, 277, 286, 287, 290, 291, 296, 297, 313, 341, 370, 413, 419, 420, 421, 429, 446, 463, 544, 609, 622], "u": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 74, 127, 161, 172, 177, 178, 179, 180, 181, 182, 183, 186, 187, 190, 191, 210, 275, 300, 326], "v": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 74, 127, 161, 172, 177, 178, 179, 180, 181, 182, 183, 186, 187, 190, 191, 210, 275, 300, 326, 626], "deviat": [2, 5, 24, 152, 162, 174, 217, 261, 300, 354, 370, 622], "indirect": 2, "set": [2, 39, 40, 48, 51, 52, 53, 54, 62, 69, 71, 103, 104, 112, 113, 115, 116, 117, 118, 140, 141, 175, 176, 184, 188, 189, 190, 191, 199, 205, 207, 243, 244, 252, 254, 256, 257, 258, 259, 290, 291, 370, 423, 429, 446, 463, 544, 561, 622], "loadscal": [2, 3], "reactionscal": [2, 3], "os": 3, "time": [3, 5, 159, 561, 587, 622, 626], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 626], "path": [3, 60, 65, 78, 125, 131, 136, 197, 202, 215, 273, 279, 284, 304, 309, 317, 322, 330, 335, 345, 350, 358, 366, 377, 383, 391, 399, 410, 425, 436, 442, 453, 459, 470, 476, 484, 492, 500, 508, 516, 524, 532, 540, 551, 557, 589, 613, 618], "dirnam": 3, "__file__": 3, "IN": [3, 627], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 60, 61, 131, 132, 149, 197, 198, 279, 280, 299, 304, 305, 309, 310, 312, 317, 318, 322, 323, 325, 330, 331, 335, 336, 338, 345, 346, 350, 351, 353, 358, 359, 366, 367, 369, 377, 378, 383, 384, 386, 391, 392, 399, 400, 402, 410, 411, 425, 426, 428, 436, 437, 442, 443, 445, 453, 454, 459, 460, 462, 470, 471, 476, 477, 479, 484, 485, 492, 493, 495, 500, 501, 508, 509, 511, 516, 517, 524, 525, 527, 532, 533, 540, 541, 543, 551, 552, 557, 558, 560, 613, 614, 618, 619, 621, 622], "from_json": 3, "appli": [3, 57, 82, 91, 110, 120, 153, 194, 220, 231, 250, 263, 347, 609], "gener": [3, 4, 5, 28, 159, 161, 339, 340, 625], "find": [3, 57, 125, 162, 164, 194, 273, 423, 561, 623, 625, 626], "initi": [3, 373, 374, 381, 432, 433, 440, 449, 450, 457, 466, 467, 474, 547, 548, 555], "opt": [3, 5], "defin": [3, 126, 133, 274, 281, 326, 341, 615], "constraint": [3, 4, 5, 403, 405, 414, 417, 418, 420, 561, 622, 625], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 626], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 131, 132, 136, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 269, 272, 273, 274, 275, 279, 280, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 309, 310, 315, 316, 317, 318, 319, 320, 322, 323, 328, 329, 330, 331, 332, 333, 335, 336, 339, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 356, 357, 358, 359, 363, 366, 367, 370, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 389, 390, 391, 392, 396, 399, 400, 406, 408, 409, 410, 411, 413, 415, 419, 421, 422, 423, 425, 426, 429, 432, 433, 434, 435, 436, 437, 439, 440, 442, 443, 446, 449, 450, 451, 452, 453, 454, 456, 457, 459, 460, 463, 466, 467, 468, 469, 470, 471, 473, 474, 476, 477, 482, 483, 484, 485, 489, 492, 493, 498, 499, 500, 501, 505, 508, 509, 514, 515, 516, 517, 521, 524, 525, 530, 531, 532, 533, 537, 540, 541, 544, 547, 548, 549, 550, 551, 552, 554, 555, 557, 558, 561, 562, 563, 564, 570, 573, 577, 581, 586, 587, 588, 589, 591, 592, 593, 594, 600, 603, 606, 609, 611, 612, 613, 614, 615, 616, 618, 619, 622], "add_paramet": [3, 4, 5], "bound_low": [3, 370, 429, 446, 463, 544], "bound_up": [3, 370, 429, 446, 463, 544], "10": [3, 4, 5, 623], "record": [3, 585], "start": [3, 5, 41, 42, 44, 46, 47, 49, 62, 125, 133, 159, 177, 178, 180, 182, 183, 186, 199, 268, 273, 281, 624, 626], "form_opt": [3, 4, 5], "solve_nlopt": [3, 4, 5, 622], "algorithm": [3, 5, 32, 56, 57, 79, 124, 167, 193, 194, 216, 272, 307, 320, 333, 339, 340, 348, 363, 380, 396, 422, 423, 439, 456, 473, 489, 505, 521, 537, 554, 561, 616, 622], "slsqp": [3, 4, 423, 561], "iter": [3, 5, 50, 91, 114, 126, 157, 158, 174, 187, 231, 255, 271, 274, 286, 287, 339, 340, 423, 561, 622], "ep": [3, 5, 423, 561], "print": [3, 4, 5, 23, 151, 301, 314, 327, 339, 340, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "out": [3, 4, 5, 339, 340, 626, 627], "f": [3, 5], "number_of_paramet": [3, 5], "number_of_constraint": [3, 5], "elaps": [3, 5, 561], "final": [3, 5, 561, 626], "valu": [3, 4, 5, 39, 40, 43, 47, 51, 52, 53, 89, 102, 103, 104, 106, 108, 115, 116, 117, 140, 141, 142, 143, 144, 145, 175, 176, 179, 183, 188, 189, 190, 229, 242, 243, 244, 246, 248, 256, 257, 258, 290, 291, 292, 293, 294, 295, 364, 373, 374, 381, 423, 432, 433, 440, 449, 450, 457, 466, 467, 474, 528, 538, 547, 548, 555, 561, 622], "object": [3, 4, 5, 23, 26, 31, 32, 35, 39, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 79, 84, 85, 86, 96, 98, 99, 100, 101, 126, 130, 131, 132, 136, 148, 149, 151, 153, 155, 156, 166, 167, 170, 175, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 216, 223, 224, 226, 236, 238, 239, 240, 241, 274, 278, 279, 280, 284, 298, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 365, 366, 367, 368, 369, 371, 375, 376, 377, 378, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 416, 424, 425, 426, 427, 428, 430, 434, 435, 436, 437, 441, 442, 443, 444, 445, 447, 451, 452, 453, 454, 458, 459, 460, 461, 462, 464, 468, 469, 470, 471, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 545, 549, 550, 551, 552, 556, 557, 558, 559, 560, 561, 569, 580, 581, 582, 583, 584, 591, 599, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 626], "function": [3, 4, 5, 39, 40, 51, 52, 53, 54, 84, 100, 103, 104, 115, 116, 118, 126, 159, 175, 176, 188, 189, 190, 191, 223, 240, 243, 244, 256, 257, 259, 274, 339, 340, 412, 416, 561, 585], "penalti": [3, 4, 5, 622], "norm": [3, 4, 5, 561], "gradient": [3, 4, 5, 412, 423, 561, 622], "gradient_norm": [3, 4, 5, 622], "figsiz": [3, 4, 5], "16": [3, 4, 5, 626], "9": [3, 4, 5], "t": [3, 4, 5, 47, 127, 155, 183, 275, 626], "40": 3, "target": [3, 354, 361, 387, 394, 480, 487, 496, 503, 504, 512, 519, 528, 535, 622, 625], "x": [3, 5, 429], "y": [3, 5, 446], "z": [3, 86, 124, 226, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 463, 473, 489, 505, 521, 537, 554, 616], "size": [3, 48, 92, 112, 184, 232, 252], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": 4, "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 157, 158, 159, 214, 260, 287, 622], "auxiliary_trail": [4, 5, 159, 622], "minim": [4, 416], "axiliari": [4, 5], "goal": [4, 405, 420], "auxiliary_trail_edg": [4, 5, 622], "should": [4, 5, 41, 53, 54, 57, 117, 118, 157, 174, 177, 190, 191, 194, 258, 259, 286, 577, 606], "small": 4, "number": [4, 5, 32, 33, 34, 36, 66, 69, 71, 119, 120, 121, 122, 126, 167, 168, 169, 171, 203, 205, 207, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 274, 339, 340, 414, 415, 423, 561], "total": [4, 561], "format": [4, 26, 30, 35, 73, 87, 89, 96, 97, 98, 102, 107, 124, 128, 132, 156, 165, 170, 209, 227, 229, 236, 237, 238, 242, 247, 272, 276, 280, 307, 310, 320, 323, 333, 336, 348, 351, 363, 367, 380, 384, 396, 400, 422, 426, 439, 443, 456, 460, 473, 477, 489, 493, 505, 509, 521, 525, 537, 541, 554, 558, 616, 619, 622], "ns": [4, 5], "show_nodetext": 4, "nodetext": 4, "pad": [4, 5, 591], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 340, 626], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 26, 30, 35, 59, 63, 96, 97, 98, 134, 156, 165, 170, 196, 200, 236, 237, 238, 282, 306, 319, 332, 347, 417, 418, 563, 593, 615, 622], "diamet": 5, "num_sid": 5, "onli": [5, 55, 71, 80, 99, 192, 207, 218, 239, 417, 418, 423, 561, 580, 615, 622, 625, 626], "even": 5, "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 373, 374, 417, 432, 433, 449, 450, 466, 467, 547, 548, 579, 591, 608], "test": [5, 214, 217, 222, 225], "subdivis": 5, "assert": 5, "remov": [5, 420, 421, 622], "last": [5, 159, 626], "theta": 5, "linspac": 5, "radiu": 5, "i": [5, 147, 297], "enumer": 5, "perimet": 5, "tension": [5, 623, 625], "list": [5, 22, 26, 29, 30, 35, 40, 41, 42, 46, 47, 48, 49, 51, 52, 56, 57, 59, 62, 64, 69, 71, 76, 77, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 102, 104, 105, 109, 110, 111, 112, 115, 116, 123, 125, 126, 133, 135, 137, 147, 150, 156, 158, 162, 163, 164, 165, 170, 176, 177, 178, 182, 183, 184, 186, 188, 189, 193, 194, 196, 199, 201, 205, 207, 212, 213, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 242, 244, 245, 249, 250, 251, 252, 256, 257, 269, 273, 274, 281, 283, 285, 287, 297, 306, 319, 332, 341, 347, 561, 563, 564, 582, 593, 594, 615, 622], "rang": [5, 47, 53, 117, 127, 183, 190, 258, 275], "intern": [5, 339, 340, 625], "ar": [5, 23, 57, 127, 151, 159, 194, 275, 301, 314, 327, 342, 355, 371, 388, 404, 423, 430, 447, 464, 481, 497, 513, 529, 545, 561, 610, 622, 624, 625, 626], "half_num_sid": 5, "int": [5, 32, 33, 34, 36, 48, 66, 69, 71, 76, 77, 82, 83, 88, 91, 92, 110, 112, 119, 120, 121, 122, 123, 126, 129, 141, 147, 162, 164, 167, 168, 169, 171, 184, 203, 205, 207, 212, 213, 220, 221, 222, 228, 231, 232, 250, 252, 253, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 277, 291, 297, 339, 340, 341, 360, 393, 423, 486, 502, 518, 534, 561, 570, 573, 585, 591, 600, 603, 609], "auxiliary_trail_length": [5, 622], "zero": [5, 86, 226], "all": [5, 27, 40, 52, 56, 86, 90, 91, 104, 157, 158, 160, 174, 176, 189, 193, 226, 230, 231, 244, 268, 286, 287, 583, 589, 591, 622, 626, 627], "allow": [5, 626], "chang": [5, 89, 102, 229, 242, 622], "low_bound": 5, "up_bound": 5, "edge_forc": 5, "lbfg": [5, 423, 561], "1000": 5, "45": 5, "A": [6, 22, 28, 32, 40, 51, 52, 53, 55, 56, 62, 64, 65, 66, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 99, 100, 101, 104, 107, 110, 115, 116, 117, 123, 125, 126, 133, 134, 135, 136, 137, 139, 142, 143, 144, 145, 147, 150, 153, 155, 159, 161, 162, 164, 167, 176, 188, 189, 190, 192, 193, 199, 201, 202, 203, 209, 212, 213, 215, 216, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 232, 233, 234, 235, 239, 240, 241, 244, 247, 250, 256, 257, 258, 269, 273, 274, 281, 282, 283, 284, 285, 287, 289, 292, 293, 294, 295, 297, 300, 313, 319, 326, 339, 340, 341, 347, 413, 419, 423, 561, 573, 580, 581, 603, 609, 615, 624, 625, 627], "b": [6, 624, 625], "tubular": [6, 624, 625], "3d": [6, 622, 624, 625], "c": [6, 89, 102, 229, 242, 624, 625, 626, 627], "circular": [6, 624, 625], "dome": [6, 622, 624, 625], "d": [6, 89, 102, 229, 242, 623, 624, 625], "jessen": [6, 624, 625], "e": [6, 147, 297, 326, 624, 625], "spiral": [6, 622, 624, 625], "staircas": [6, 622, 624, 625], "download": [7, 8, 9, 10, 11, 626], "rhino": [7, 23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 577, 606, 610, 622, 625, 626], "file": [7, 8, 9, 10, 11, 60, 61, 65, 131, 136, 197, 198, 202, 279, 284, 304, 305, 309, 317, 318, 322, 330, 331, 335, 345, 346, 350, 358, 359, 366, 377, 378, 383, 391, 392, 399, 410, 411, 425, 436, 437, 442, 453, 454, 459, 470, 471, 476, 484, 485, 492, 500, 501, 508, 516, 517, 524, 532, 533, 540, 551, 552, 557, 589, 613, 614, 618, 622, 627], "grasshopp": [7, 8, 9, 10, 11, 23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 577, 606, 610, 622, 624, 625], "viewer": [12, 13, 580, 622, 625], "class": [22, 23, 150, 151, 300, 301, 313, 314, 326, 327, 341, 342, 354, 355, 370, 371, 387, 388, 403, 404, 429, 430, 446, 447, 463, 464, 480, 481, 496, 497, 512, 513, 528, 529, 544, 545, 562, 580, 592, 609, 610, 622], "arg": [22, 150, 319, 364, 506, 522, 538, 580], "kwarg": [22, 53, 117, 150, 190, 258, 300, 306, 313, 319, 326, 332, 341, 364, 403, 506, 522, 538, 562, 563, 564, 580, 581, 582, 589, 592, 593, 594, 609], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 616, 617, 618, 619, 620, 621, 625], "base": [22, 67, 150, 300, 313, 326, 341, 354, 370, 387, 403, 423, 429, 446, 463, 480, 496, 512, 528, 544, 561, 562, 580, 592, 609, 622], "The": [22, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 73, 74, 75, 80, 81, 82, 87, 91, 92, 93, 94, 95, 103, 104, 105, 107, 109, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 138, 139, 140, 141, 148, 149, 150, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 217, 218, 219, 220, 225, 227, 231, 232, 233, 234, 235, 243, 244, 245, 247, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 291, 298, 299, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 341, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 402, 408, 409, 410, 411, 412, 414, 415, 416, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 522, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 577, 586, 588, 592, 593, 594, 606, 609, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 625, 626, 627], "heart": [22, 150], "life": [22, 150], "argument": [22, 53, 126, 142, 143, 144, 145, 150, 190, 274, 292, 293, 294, 295, 306, 319, 332, 563, 564, 593, 594, 622], "dict": [22, 40, 50, 52, 53, 54, 58, 64, 73, 76, 77, 87, 88, 104, 107, 114, 116, 117, 118, 130, 132, 140, 141, 142, 143, 144, 145, 147, 148, 150, 157, 174, 176, 187, 189, 190, 191, 195, 201, 209, 212, 213, 227, 228, 244, 247, 255, 257, 258, 259, 278, 280, 286, 290, 291, 292, 293, 294, 295, 297, 298, 303, 306, 308, 310, 311, 316, 319, 321, 323, 324, 329, 332, 334, 336, 337, 344, 349, 351, 352, 357, 365, 367, 368, 376, 382, 384, 385, 390, 398, 400, 401, 409, 424, 426, 427, 435, 441, 443, 444, 452, 458, 460, 461, 469, 475, 477, 478, 483, 491, 493, 494, 499, 507, 509, 510, 515, 523, 525, 526, 531, 539, 541, 542, 550, 556, 558, 559, 563, 564, 570, 573, 593, 594, 600, 603, 612, 617, 619, 620], "keyword": [22, 150, 306, 319, 332, 563, 564, 593, 594], "return": [22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 292, 293, 294, 295, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 408, 409, 410, 411, 422, 423, 424, 425, 426, 427, 428, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 468, 469, 470, 471, 473, 475, 476, 477, 478, 479, 482, 483, 484, 485, 486, 487, 489, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 527, 530, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 549, 550, 551, 552, 554, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 570, 573, 576, 577, 578, 579, 581, 588, 593, 594, 595, 596, 597, 600, 603, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622], "method": [22, 23, 150, 151, 300, 301, 313, 314, 326, 327, 341, 342, 354, 355, 370, 371, 387, 388, 403, 404, 423, 429, 430, 446, 447, 463, 464, 480, 481, 496, 497, 512, 513, 528, 529, 544, 545, 561, 562, 569, 580, 585, 592, 599, 609, 610, 622], "inherit": [22, 150, 300, 313, 326, 341, 354, 370, 387, 403, 429, 446, 463, 480, 496, 512, 528, 544, 562, 580, 592, 609], "convert": [23, 130, 151, 278, 301, 308, 314, 321, 327, 334, 342, 349, 355, 365, 371, 382, 388, 398, 404, 424, 430, 441, 447, 458, 464, 475, 481, 491, 497, 507, 513, 523, 529, 539, 545, 556, 610, 617, 622], "instanc": [23, 58, 59, 60, 61, 63, 134, 151, 195, 196, 197, 198, 200, 282, 301, 303, 304, 305, 314, 316, 317, 318, 327, 329, 330, 331, 342, 344, 345, 346, 355, 357, 358, 359, 371, 376, 377, 378, 388, 390, 391, 392, 404, 409, 410, 411, 430, 435, 436, 437, 447, 452, 453, 454, 464, 469, 470, 471, 481, 483, 484, 485, 497, 499, 500, 501, 513, 515, 516, 517, 529, 531, 532, 533, 545, 550, 551, 552, 610, 612, 613, 614], "string": [23, 60, 61, 65, 73, 87, 107, 131, 132, 136, 151, 197, 198, 202, 209, 227, 247, 279, 280, 284, 301, 304, 305, 309, 310, 314, 317, 318, 322, 323, 327, 330, 331, 335, 336, 342, 345, 346, 350, 351, 355, 358, 359, 366, 367, 371, 377, 378, 383, 384, 388, 391, 392, 399, 400, 404, 410, 411, 425, 426, 430, 436, 437, 442, 443, 447, 453, 454, 459, 460, 464, 470, 471, 476, 477, 481, 484, 485, 492, 493, 497, 500, 501, 508, 509, 513, 516, 517, 524, 525, 529, 532, 533, 540, 541, 545, 551, 552, 557, 558, 610, 613, 614, 618, 619], "thi": [23, 31, 32, 56, 57, 58, 60, 61, 79, 84, 100, 151, 159, 166, 167, 193, 194, 195, 197, 198, 216, 223, 240, 287, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 327, 328, 329, 330, 331, 339, 340, 342, 343, 344, 345, 346, 355, 356, 357, 358, 359, 371, 373, 374, 375, 376, 377, 378, 388, 389, 390, 391, 392, 404, 408, 409, 410, 411, 423, 430, 432, 433, 434, 435, 436, 437, 447, 449, 450, 451, 452, 453, 454, 464, 466, 467, 468, 469, 470, 471, 481, 482, 483, 484, 485, 497, 498, 499, 500, 501, 513, 514, 515, 516, 517, 529, 530, 531, 532, 533, 545, 547, 548, 549, 550, 551, 552, 561, 580, 610, 611, 612, 613, 614, 622, 626, 627], "exist": [23, 39, 40, 51, 52, 78, 84, 100, 103, 104, 115, 116, 140, 141, 151, 175, 176, 188, 189, 215, 223, 240, 243, 244, 256, 257, 287, 290, 291, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 580, 610, 622], "net": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610, 625], "compat": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 577, 606, 610, 622], "when": [23, 39, 103, 151, 175, 243, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610, 622, 626], "us": [23, 39, 40, 51, 52, 54, 55, 57, 62, 65, 68, 69, 70, 71, 73, 84, 87, 89, 99, 100, 102, 103, 104, 107, 115, 116, 118, 124, 151, 175, 176, 188, 189, 191, 192, 194, 199, 202, 204, 205, 206, 207, 209, 223, 227, 229, 239, 240, 242, 243, 244, 247, 256, 257, 259, 272, 301, 307, 314, 320, 327, 333, 340, 342, 348, 355, 363, 371, 380, 388, 396, 404, 422, 423, 430, 439, 447, 456, 464, 473, 481, 489, 497, 505, 513, 521, 529, 537, 545, 554, 561, 563, 578, 581, 593, 607, 610, 616, 622, 623, 624, 625, 626, 627], "ironpython": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "implicit": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "convers": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "usual": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "take": [23, 54, 57, 118, 151, 191, 194, 259, 301, 314, 327, 342, 355, 371, 388, 404, 418, 430, 447, 464, 481, 497, 513, 529, 545, 610], "place": [23, 138, 151, 288, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "cpython": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "kick": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "its": [23, 50, 53, 54, 109, 117, 118, 126, 127, 130, 148, 149, 151, 187, 190, 191, 249, 258, 259, 274, 275, 278, 298, 299, 301, 308, 311, 312, 314, 319, 321, 324, 325, 327, 334, 337, 338, 342, 349, 352, 353, 355, 365, 368, 369, 371, 382, 385, 386, 388, 398, 401, 402, 404, 407, 424, 427, 428, 430, 441, 444, 445, 447, 458, 461, 462, 464, 475, 478, 479, 481, 491, 494, 495, 497, 507, 510, 511, 513, 523, 526, 527, 529, 539, 542, 543, 545, 556, 559, 560, 610, 617, 620, 621], "default": [23, 31, 82, 91, 140, 141, 142, 143, 144, 145, 151, 157, 166, 174, 220, 231, 286, 290, 291, 292, 293, 294, 295, 301, 302, 314, 315, 327, 328, 339, 340, 342, 343, 355, 356, 371, 375, 388, 389, 404, 408, 423, 430, 434, 447, 451, 464, 468, 481, 482, 497, 498, 513, 514, 529, 530, 545, 549, 561, 610, 611, 622], "self": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "gettyp": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "fullnam": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "similar": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "overrid": [23, 151, 301, 314, 326, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "fix": [23, 55, 99, 126, 151, 155, 192, 239, 274, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610, 622], "make": [23, 31, 151, 159, 166, 301, 302, 314, 315, 327, 328, 342, 343, 354, 355, 356, 371, 375, 388, 389, 404, 408, 430, 434, 447, 451, 464, 468, 481, 482, 497, 498, 512, 513, 514, 528, 529, 530, 545, 549, 610, 611, 626], "displai": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 590, 610, 622], "proper": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "represent": [23, 130, 131, 132, 149, 151, 278, 279, 280, 299, 301, 308, 309, 310, 312, 314, 321, 322, 323, 325, 327, 334, 335, 336, 338, 342, 349, 350, 351, 353, 355, 365, 366, 367, 369, 371, 382, 383, 384, 386, 388, 398, 399, 400, 402, 404, 424, 425, 426, 428, 430, 441, 442, 443, 445, 447, 458, 459, 460, 462, 464, 475, 476, 477, 479, 481, 491, 492, 493, 495, 497, 507, 508, 509, 511, 513, 523, 524, 525, 527, 529, 539, 540, 541, 543, 545, 556, 557, 558, 560, 610, 617, 618, 619, 621], "connect": [23, 29, 30, 62, 65, 66, 71, 78, 81, 97, 151, 162, 163, 164, 165, 199, 202, 203, 207, 215, 219, 237, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610, 626, 627], "panel": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "other": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610, 625, 626, 627], "type": [23, 31, 57, 58, 60, 61, 123, 151, 166, 194, 195, 197, 198, 269, 301, 302, 303, 304, 305, 314, 315, 316, 317, 318, 327, 328, 329, 330, 331, 342, 343, 344, 345, 346, 355, 356, 357, 358, 359, 371, 375, 376, 377, 378, 388, 389, 390, 391, 392, 404, 408, 409, 410, 411, 430, 434, 435, 436, 437, 447, 451, 452, 453, 454, 464, 468, 469, 470, 471, 481, 482, 483, 484, 485, 497, 498, 499, 500, 501, 513, 514, 515, 516, 517, 529, 530, 531, 532, 533, 545, 549, 550, 551, 552, 563, 564, 577, 581, 593, 594, 606, 610, 611, 612, 613, 614, 622, 626], "output": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610, 622], "an": [24, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 57, 58, 60, 61, 65, 84, 100, 103, 115, 116, 120, 122, 130, 131, 132, 136, 140, 152, 158, 159, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 191, 194, 195, 197, 198, 202, 214, 217, 221, 223, 225, 240, 243, 256, 257, 263, 265, 278, 279, 280, 284, 287, 290, 302, 303, 304, 305, 306, 308, 309, 310, 315, 316, 317, 318, 321, 322, 323, 328, 329, 330, 331, 332, 334, 335, 336, 339, 340, 343, 344, 345, 346, 349, 350, 351, 356, 357, 358, 359, 360, 365, 366, 367, 370, 375, 376, 377, 378, 382, 383, 384, 389, 390, 391, 392, 393, 398, 399, 400, 403, 408, 409, 410, 411, 421, 423, 424, 425, 426, 429, 434, 435, 436, 437, 441, 442, 443, 446, 451, 452, 453, 454, 458, 459, 460, 463, 468, 469, 470, 471, 475, 476, 477, 482, 483, 484, 485, 486, 491, 492, 493, 498, 499, 500, 501, 502, 507, 508, 509, 514, 515, 516, 517, 518, 523, 524, 525, 530, 531, 532, 533, 534, 539, 540, 541, 544, 549, 550, 551, 552, 556, 557, 558, 562, 563, 564, 569, 570, 577, 589, 592, 593, 594, 599, 600, 606, 611, 612, 613, 614, 617, 618, 619, 622, 625, 626, 627], "tupl": [24, 29, 39, 40, 43, 45, 48, 50, 51, 52, 53, 54, 56, 59, 62, 64, 68, 69, 77, 114, 117, 118, 133, 135, 140, 147, 152, 157, 163, 174, 175, 176, 179, 181, 184, 185, 187, 188, 189, 190, 191, 193, 196, 199, 201, 204, 205, 213, 214, 217, 225, 255, 258, 259, 281, 283, 286, 290, 297, 306, 319, 332, 360, 393, 486, 502, 518, 534, 570, 579, 600, 608, 622], "doubl": [25, 154, 626], "rtype": [26, 30, 35, 89, 96, 97, 98, 102, 156, 165, 170, 229, 236, 237, 238, 242], "arrai": [26, 30, 35, 88, 89, 96, 97, 98, 102, 147, 156, 165, 170, 228, 229, 236, 237, 238, 242, 297, 417, 418], "adjac": [26, 96, 156, 236], "matrix": [26, 30, 35, 89, 96, 97, 98, 102, 156, 165, 170, 229, 236, 237, 238, 242], "network": [26, 27, 28, 30, 32, 35, 37, 50, 55, 56, 57, 62, 64, 65, 66, 74, 75, 78, 79, 84, 85, 86, 89, 90, 96, 97, 98, 99, 100, 101, 102, 114, 125, 126, 133, 135, 136, 137, 138, 139, 156, 160, 161, 165, 167, 170, 172, 187, 192, 193, 194, 199, 201, 202, 203, 210, 211, 215, 216, 223, 224, 226, 229, 230, 236, 237, 238, 239, 240, 241, 242, 255, 273, 274, 281, 283, 284, 285, 288, 289, 565, 581, 584, 595], "datastructur": [26, 28, 30, 35, 78, 89, 96, 97, 98, 102, 124, 156, 161, 165, 170, 215, 229, 236, 237, 238, 242, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "obj": [26, 28, 35, 39, 51, 65, 78, 96, 98, 103, 115, 124, 136, 156, 161, 170, 175, 188, 202, 215, 236, 238, 243, 256, 272, 284, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "get": [26, 28, 35, 39, 40, 43, 45, 48, 51, 52, 53, 54, 68, 69, 70, 71, 72, 78, 96, 98, 103, 104, 108, 110, 112, 113, 115, 116, 117, 118, 123, 124, 156, 161, 170, 175, 176, 179, 181, 184, 185, 188, 189, 190, 191, 204, 205, 206, 207, 208, 215, 236, 238, 243, 244, 248, 250, 252, 253, 254, 256, 257, 258, 259, 269, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 504, 505, 521, 537, 554, 616, 624], "liter": [26, 30, 35, 89, 96, 97, 98, 102, 156, 165, 170, 229, 236, 237, 238, 242, 577, 606], "csc": [26, 30, 35, 89, 96, 97, 98, 102, 156, 165, 170, 229, 236, 237, 238, 242], "csr": [26, 30, 35, 89, 96, 97, 98, 102, 156, 165, 170, 229, 236, 237, 238, 242], "coo": [26, 30, 35, 89, 96, 97, 98, 102, 156, 165, 170, 229, 236, 237, 238, 242], "option": [26, 30, 31, 35, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 57, 62, 65, 66, 71, 73, 74, 87, 89, 92, 96, 97, 98, 99, 102, 103, 104, 105, 107, 112, 114, 115, 116, 117, 118, 124, 126, 127, 131, 132, 142, 143, 144, 145, 156, 165, 166, 170, 175, 176, 177, 183, 184, 187, 188, 189, 190, 191, 192, 194, 199, 202, 203, 207, 209, 210, 227, 229, 232, 236, 237, 238, 239, 242, 243, 244, 245, 247, 252, 255, 256, 257, 258, 259, 272, 274, 275, 279, 280, 292, 293, 294, 295, 302, 307, 309, 310, 315, 320, 322, 323, 328, 333, 335, 336, 339, 340, 343, 348, 350, 351, 356, 363, 366, 367, 375, 380, 383, 384, 389, 396, 399, 400, 408, 422, 423, 425, 426, 434, 439, 442, 443, 451, 456, 459, 460, 468, 473, 476, 477, 482, 489, 492, 493, 498, 505, 508, 509, 514, 521, 524, 525, 530, 537, 540, 541, 549, 554, 557, 558, 561, 563, 564, 570, 573, 577, 581, 583, 585, 587, 589, 591, 593, 594, 600, 603, 606, 611, 616, 618, 619, 626], "array_lik": [26, 30, 35, 89, 96, 97, 98, 102, 156, 165, 170, 229, 236, 237, 238, 242], "construct": [26, 30, 35, 58, 60, 61, 62, 64, 65, 66, 67, 89, 96, 97, 98, 102, 156, 165, 170, 195, 197, 198, 199, 201, 202, 203, 229, 236, 237, 238, 242, 303, 304, 305, 316, 317, 318, 329, 330, 331, 344, 345, 346, 357, 358, 359, 376, 377, 378, 390, 391, 392, 409, 410, 411, 435, 436, 437, 452, 453, 454, 469, 470, 471, 483, 484, 485, 499, 500, 501, 515, 516, 517, 531, 532, 533, 550, 551, 552, 612, 613, 614], "none": [27, 28, 31, 37, 38, 39, 40, 51, 52, 53, 55, 57, 62, 65, 73, 87, 99, 103, 104, 107, 113, 115, 116, 117, 126, 131, 136, 138, 140, 142, 143, 144, 145, 160, 161, 166, 172, 173, 175, 176, 188, 189, 190, 192, 194, 199, 202, 209, 227, 239, 243, 244, 247, 254, 256, 257, 258, 274, 279, 284, 288, 290, 292, 293, 294, 295, 302, 309, 313, 315, 322, 326, 328, 335, 339, 340, 343, 350, 354, 356, 366, 370, 375, 383, 387, 389, 399, 408, 423, 425, 429, 434, 442, 446, 451, 459, 463, 468, 476, 480, 482, 492, 496, 498, 508, 512, 514, 524, 528, 530, 540, 544, 549, 557, 561, 565, 566, 567, 570, 573, 576, 577, 578, 581, 583, 585, 586, 587, 588, 589, 590, 591, 595, 596, 597, 600, 603, 605, 606, 607, 611, 618, 622], "cl": [28, 31, 161, 166, 302, 315, 328, 343, 356, 375, 389, 408, 434, 451, 468, 482, 498, 514, 530, 549, 611], "graph": [28, 38, 59, 63, 119, 121, 128, 134, 159, 161, 173, 196, 200, 262, 264, 276, 282], "g": [28, 161, 326], "h": [28, 161], "same": [28, 57, 161, 194, 625], "vertic": [28, 57, 78, 86, 137, 161, 194, 215, 226, 285], "whose": [28, 161, 615], "consist": [28, 161, 580], "present": [28, 74, 75, 161, 210, 211], "refer": [28, 161, 423, 561, 588, 589, 625, 626], "wolfram": [28, 161], "mathworld": [28, 161], "avail": [28, 84, 100, 158, 161, 223, 240, 626], "http": [28, 84, 100, 161, 223, 240, 588, 589, 623], "com": [28, 161], "graphcompl": [28, 161], "html": [28, 161, 588, 589], "exampl": [28, 37, 38, 54, 57, 78, 118, 124, 161, 172, 173, 191, 194, 215, 259, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616, 622, 625], "network_compl": [28, 161], "from_obj": [28, 78, 124, 161, 215, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "line": [28, 55, 57, 62, 65, 78, 84, 99, 100, 133, 161, 192, 194, 199, 202, 215, 223, 239, 240, 281, 306, 332, 387, 626], "ani": [28, 40, 50, 51, 52, 53, 54, 57, 104, 114, 115, 116, 117, 118, 142, 143, 144, 145, 161, 176, 187, 188, 189, 190, 191, 194, 244, 255, 256, 257, 258, 259, 287, 292, 293, 294, 295, 563, 564, 593, 594, 625, 627], "has_edg": [28, 161], "direct": [28, 42, 47, 57, 63, 74, 161, 178, 183, 194, 200, 210, 341, 622], "fals": [28, 50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 86, 89, 99, 100, 102, 114, 117, 118, 124, 131, 132, 157, 159, 161, 174, 187, 190, 191, 192, 207, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 239, 240, 242, 255, 258, 259, 272, 279, 280, 286, 307, 309, 310, 320, 322, 323, 333, 335, 336, 339, 340, 348, 350, 351, 363, 366, 367, 380, 383, 384, 396, 399, 400, 422, 425, 426, 439, 442, 443, 456, 459, 460, 473, 476, 477, 489, 492, 493, 505, 508, 509, 521, 524, 525, 537, 540, 541, 554, 557, 558, 585, 616, 618, 619, 622], "hashabl": [29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 81, 87, 88, 90, 92, 93, 94, 95, 99, 103, 104, 105, 107, 109, 111, 112, 114, 115, 116, 117, 118, 125, 127, 135, 140, 147, 163, 168, 169, 171, 172, 173, 175, 176, 177, 178, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 201, 204, 205, 206, 207, 209, 210, 211, 212, 213, 218, 219, 227, 228, 230, 232, 233, 234, 235, 239, 243, 244, 245, 247, 249, 251, 252, 255, 256, 257, 258, 259, 273, 275, 283, 290, 297], "identifi": [29, 33, 34, 36, 37, 38, 39, 40, 48, 50, 51, 52, 53, 54, 56, 59, 68, 69, 70, 71, 74, 75, 80, 81, 88, 90, 92, 93, 94, 95, 103, 104, 105, 109, 111, 112, 114, 115, 116, 117, 118, 125, 140, 141, 163, 168, 169, 171, 172, 173, 175, 176, 184, 187, 188, 189, 190, 191, 193, 196, 204, 205, 206, 207, 210, 211, 218, 219, 228, 230, 232, 233, 234, 235, 243, 244, 245, 249, 251, 252, 255, 256, 257, 258, 259, 273, 290, 291, 622], "independ": [31, 139, 166, 289, 302, 315, 328, 343, 356, 375, 389, 408, 434, 451, 468, 482, 498, 514, 530, 549, 611], "current": [31, 89, 102, 166, 229, 242, 302, 315, 328, 343, 356, 361, 375, 389, 394, 408, 434, 451, 468, 482, 487, 498, 503, 514, 519, 530, 535, 549, 566, 567, 579, 596, 597, 608, 611], "count": [32, 167], "cross": [32, 56, 79, 84, 85, 100, 101, 167, 193, 216, 223, 224, 240, 241, 602], "pair": [32, 39, 40, 53, 56, 59, 62, 68, 73, 76, 77, 79, 87, 88, 104, 107, 117, 133, 135, 147, 167, 175, 176, 190, 193, 196, 199, 204, 209, 212, 213, 216, 227, 228, 244, 247, 258, 281, 283, 297, 563, 577, 593, 606], "note": [32, 56, 57, 78, 79, 80, 84, 89, 100, 102, 138, 139, 140, 141, 155, 158, 159, 167, 193, 194, 215, 216, 218, 223, 229, 240, 242, 287, 288, 289, 290, 291, 326, 373, 374, 432, 433, 449, 450, 466, 467, 547, 548, 588, 589, 615, 623], "assum": [32, 56, 79, 167, 193, 216, 626], "li": [32, 56, 79, 86, 167, 193, 216, 226], "xy": [32, 56, 79, 86, 167, 193, 216, 226], "plane": [32, 55, 56, 79, 84, 85, 86, 99, 100, 101, 167, 192, 193, 216, 223, 224, 226, 239, 240, 241, 326, 480, 622], "neighbor": [33, 34, 36, 57, 80, 94, 95, 111, 126, 127, 168, 169, 171, 194, 218, 234, 235, 251, 274, 275], "numer": [34, 169, 423, 561, 625], "incom": [34, 94, 169, 234], "degre": [35, 66, 98, 170, 203, 238], "outgo": [36, 95, 171, 235], "delet": [37, 38, 172, 173, 622], "first": [37, 74, 127, 159, 172, 210, 275, 423, 561, 622, 626], "second": [37, 74, 127, 172, 210, 275, 586, 587], "name": [39, 40, 51, 52, 53, 103, 104, 115, 116, 117, 140, 141, 142, 143, 144, 145, 175, 176, 188, 189, 190, 243, 244, 256, 257, 258, 290, 291, 292, 293, 294, 295, 372, 423, 431, 448, 465, 546, 561, 626], "attribut": [39, 40, 50, 51, 52, 53, 54, 103, 104, 114, 115, 116, 117, 118, 140, 141, 142, 143, 144, 145, 157, 174, 175, 176, 187, 188, 189, 190, 191, 243, 244, 255, 256, 257, 258, 259, 286, 290, 291, 292, 293, 294, 295, 372, 431, 448, 465, 546, 622], "str": [39, 40, 41, 50, 51, 52, 53, 54, 61, 62, 65, 73, 87, 103, 104, 105, 107, 114, 115, 116, 117, 118, 124, 127, 128, 132, 140, 141, 142, 143, 144, 145, 149, 175, 176, 177, 187, 188, 189, 190, 191, 198, 199, 202, 209, 227, 243, 244, 245, 247, 255, 256, 257, 258, 259, 272, 275, 276, 280, 290, 291, 292, 293, 294, 295, 299, 305, 307, 310, 312, 318, 320, 323, 325, 331, 333, 336, 338, 346, 348, 351, 353, 359, 363, 367, 369, 378, 380, 384, 386, 392, 396, 400, 402, 411, 422, 423, 426, 428, 437, 439, 443, 445, 454, 456, 460, 462, 471, 473, 477, 479, 485, 489, 493, 495, 501, 505, 509, 511, 517, 521, 525, 527, 533, 537, 541, 543, 552, 554, 558, 560, 561, 563, 564, 570, 573, 585, 589, 593, 594, 600, 603, 614, 616, 619, 621], "setter": [39, 40, 51, 52, 103, 104, 115, 116, 175, 176, 188, 189, 243, 244, 256, 257, 622], "rais": [39, 40, 51, 52, 55, 84, 99, 100, 103, 104, 115, 116, 126, 127, 140, 141, 148, 149, 175, 176, 188, 189, 192, 223, 239, 240, 243, 244, 256, 257, 274, 275, 290, 291, 298, 299, 311, 312, 324, 325, 337, 338, 352, 353, 368, 369, 385, 386, 401, 402, 427, 428, 444, 445, 461, 462, 478, 479, 494, 495, 510, 511, 526, 527, 542, 543, 559, 560, 620, 621, 622], "keyerror": [39, 40, 51, 52, 103, 104, 115, 116, 140, 141, 175, 176, 188, 189, 243, 244, 256, 257, 290, 291], "If": [39, 40, 47, 50, 51, 52, 53, 54, 55, 71, 74, 84, 89, 99, 100, 102, 103, 104, 114, 115, 116, 117, 118, 124, 126, 127, 131, 132, 140, 141, 162, 164, 175, 176, 183, 187, 188, 189, 190, 191, 192, 207, 210, 223, 229, 239, 240, 242, 243, 244, 255, 256, 257, 258, 259, 272, 274, 275, 279, 280, 290, 291, 307, 309, 310, 320, 322, 323, 326, 333, 335, 336, 339, 340, 348, 350, 351, 363, 366, 367, 380, 383, 384, 396, 399, 400, 422, 423, 425, 426, 439, 442, 443, 456, 459, 460, 473, 476, 477, 489, 492, 493, 505, 508, 509, 521, 524, 525, 537, 540, 541, 554, 557, 558, 561, 616, 618, 619, 623, 624, 626], "doe": [39, 40, 51, 52, 103, 104, 115, 116, 140, 141, 175, 176, 188, 189, 243, 244, 256, 257, 290, 291, 625], "multipl": [40, 51, 52, 104, 115, 116, 176, 188, 189, 244, 256, 257, 403, 582], "empti": [40, 52, 104, 162, 164, 176, 189, 244], "dictionari": [40, 58, 64, 73, 76, 77, 87, 88, 104, 107, 142, 143, 144, 145, 147, 176, 195, 201, 209, 212, 213, 227, 228, 244, 247, 292, 293, 294, 295, 297, 303, 316, 329, 344, 357, 376, 390, 409, 413, 419, 435, 452, 469, 483, 499, 515, 531, 550, 612, 622], "correspond": [40, 52, 73, 77, 87, 88, 104, 107, 116, 147, 176, 189, 209, 213, 227, 228, 244, 247, 257, 297, 563, 577, 593, 606], "provid": [40, 53, 58, 116, 126, 176, 190, 195, 257, 274, 303, 316, 329, 344, 357, 376, 390, 409, 435, 452, 469, 483, 499, 515, 531, 550, 563, 593, 612, 625, 627], "ax": [41, 105, 177, 245, 578, 607, 622], "xyz": [41, 46, 47, 72, 89, 102, 105, 110, 113, 135, 146, 177, 182, 183, 208, 229, 242, 245, 250, 254, 283, 296, 306, 313, 319, 332, 341, 347, 387, 480, 496, 615], "coordin": [41, 46, 47, 62, 64, 86, 105, 111, 113, 133, 135, 137, 177, 182, 183, 199, 201, 226, 245, 251, 254, 281, 283, 285, 306, 319, 332, 347, 429, 446, 463, 579, 608, 615], "end": [41, 42, 44, 46, 47, 49, 62, 125, 133, 155, 177, 178, 180, 182, 183, 186, 199, 273, 281, 306, 332], "along": [41, 47, 127, 177, 183, 275], "which": [41, 53, 54, 57, 117, 118, 177, 190, 191, 194, 258, 259, 577, 606], "includ": [41, 177, 287, 583, 622, 627], "float": [41, 42, 43, 44, 45, 46, 47, 49, 62, 64, 73, 82, 87, 91, 105, 107, 109, 111, 126, 127, 133, 135, 137, 177, 178, 179, 180, 181, 182, 183, 186, 199, 201, 209, 220, 227, 231, 245, 247, 249, 251, 274, 275, 281, 283, 285, 339, 340, 341, 347, 361, 364, 394, 423, 487, 503, 519, 535, 538, 561, 579, 583, 586, 587, 608, 615], "vector": [42, 47, 49, 89, 102, 109, 110, 123, 178, 183, 186, 229, 242, 249, 250, 269, 341, 347, 394, 487, 503, 506, 512, 519, 522], "locat": [46, 47, 182, 183], "midpoint": [46, 182], "outsid": [47, 57, 183, 194], "lie": [47, 183], "random": [48, 66, 68, 69, 70, 71, 112, 184, 203, 204, 205, 206, 207, 252], "sampl": [48, 112, 184, 252], "over": [50, 91, 114, 157, 158, 174, 187, 231, 255, 271, 286, 287], "bool": [50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 99, 100, 101, 102, 114, 117, 118, 124, 131, 132, 157, 159, 174, 187, 190, 191, 192, 207, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 239, 240, 241, 242, 255, 258, 259, 272, 279, 280, 286, 307, 309, 310, 320, 322, 323, 333, 335, 336, 339, 340, 348, 350, 351, 363, 366, 367, 380, 383, 384, 396, 399, 400, 422, 425, 426, 439, 442, 443, 456, 459, 460, 473, 476, 477, 489, 492, 493, 505, 508, 509, 521, 524, 525, 537, 540, 541, 554, 557, 558, 585, 616, 618, 619], "yield": [50, 53, 54, 91, 114, 117, 118, 129, 157, 158, 174, 187, 190, 191, 231, 255, 258, 259, 268, 270, 271, 277, 286, 287], "addit": [50, 53, 54, 84, 100, 114, 117, 118, 142, 143, 144, 145, 187, 190, 191, 223, 240, 255, 258, 259, 292, 293, 294, 295, 319], "next": [50, 53, 54, 91, 114, 117, 118, 129, 157, 158, 174, 187, 190, 191, 231, 255, 258, 259, 268, 271, 277, 286, 287, 339, 340, 625, 626], "attr": [50, 53, 54, 114, 187, 190, 191, 255], "contain": [51, 52, 58, 60, 61, 65, 74, 116, 131, 188, 189, 195, 197, 198, 202, 210, 257, 279, 303, 304, 305, 309, 316, 317, 318, 322, 329, 330, 331, 335, 344, 345, 346, 350, 357, 358, 359, 366, 376, 377, 378, 383, 390, 391, 392, 399, 409, 410, 411, 425, 435, 436, 437, 442, 452, 453, 454, 459, 469, 470, 471, 476, 483, 484, 485, 492, 499, 500, 501, 508, 515, 516, 517, 524, 531, 532, 533, 540, 550, 551, 552, 557, 612, 613, 614, 618], "per": [51, 52, 66, 116, 188, 189, 203, 257, 417, 418, 561], "request": [51, 52, 104, 188, 189, 244], "condit": [53, 54, 117, 118, 190, 191, 258, 259, 627], "certain": [53, 54, 73, 87, 107, 117, 118, 190, 191, 209, 227, 247, 258, 259], "can": [53, 84, 100, 117, 190, 223, 240, 258, 622, 626], "min": [53, 117, 190, 258], "max": [53, 117, 190, 258], "predic": [54, 118, 191, 259], "lambda": [54, 118, 191, 259], "callabl": [54, 118, 126, 191, 259, 274, 585, 588], "you": [54, 118, 191, 259, 623, 624, 625, 626], "want": [54, 118, 191, 259, 626], "evalu": [54, 118, 191, 259], "straightlin": [55, 99, 192, 239], "emb": [55, 99, 192, 239], "two": [55, 56, 78, 99, 125, 158, 159, 192, 193, 215, 239, 273, 306, 332, 626], "straight": [55, 57, 84, 99, 100, 192, 194, 223, 239, 240], "embed": [55, 57, 84, 85, 99, 100, 101, 192, 194, 223, 224, 239, 240, 241], "wa": [55, 99, 192, 239, 622, 626], "success": [55, 99, 192, 239], "otherwis": [55, 74, 78, 79, 82, 83, 84, 85, 86, 99, 100, 101, 192, 210, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 239, 240, 241, 615, 627], "importerror": [55, 84, 99, 100, 192, 223, 239, 240], "networkx": [55, 63, 99, 134, 192, 200, 239, 282], "instal": [55, 84, 99, 100, 192, 223, 239, 240, 622, 625], "each": [56, 57, 115, 133, 135, 193, 194, 256, 281, 283], "repres": [56, 62, 135, 193, 199, 283], "vertex": [56, 57, 68, 77, 147, 193, 194, 204, 213, 297], "breakpoint": [57, 194], "face": [57, 124, 194, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "break": [57, 194], "found": [57, 194], "primarili": [57, 194], "up": [57, 87, 107, 194, 227, 247, 626], "between": [57, 66, 125, 194, 203, 273, 361, 394, 487, 503, 519, 535], "specif": [57, 74, 75, 81, 194, 210, 211, 219, 626], "For": [57, 194, 563, 564, 588, 589, 593, 594], "applic": [57, 194], "involv": [57, 194], "dual": [57, 194], "where": [57, 120, 129, 194, 263, 277, 347, 609, 615], "extern": [57, 194], "reaction": [57, 123, 194, 269, 512, 575, 622, 625], "input": [57, 194, 622], "essenti": [57, 194], "wall": [57, 194], "follow": [57, 194, 423, 561, 626, 627], "maze": [57, 194], "solv": [57, 194, 423, 561, 625, 626], "It": [57, 84, 100, 194, 223, 240], "reli": [57, 194], "repes": [57, 194], "determin": [57, 194], "order": [57, 159, 194, 287, 418], "around": [57, 194, 591], "alwai": [57, 194], "turn": [57, 194], "classmethod": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 195, 196, 197, 198, 199, 200, 201, 202, 203, 303, 304, 305, 306, 316, 317, 318, 319, 329, 330, 331, 332, 344, 345, 346, 347, 357, 358, 359, 376, 377, 378, 390, 391, 392, 409, 410, 411, 435, 436, 437, 452, 453, 454, 469, 470, 471, 483, 484, 485, 499, 500, 501, 515, 516, 517, 531, 532, 533, 550, 551, 552, 612, 613, 614, 615], "ha": [58, 60, 61, 79, 80, 129, 195, 197, 198, 216, 218, 277, 303, 304, 305, 316, 317, 318, 329, 330, 331, 344, 345, 346, 357, 358, 359, 376, 377, 378, 390, 391, 392, 409, 410, 411, 435, 436, 437, 452, 453, 454, 469, 470, 471, 483, 484, 485, 499, 500, 501, 515, 516, 517, 531, 532, 533, 550, 551, 552, 612, 613, 614, 615, 626], "correct": [58, 60, 61, 195, 197, 198, 303, 304, 305, 316, 317, 318, 329, 330, 331, 344, 345, 346, 357, 358, 359, 376, 377, 378, 390, 391, 392, 409, 410, 411, 435, 436, 437, 452, 453, 454, 469, 470, 471, 483, 484, 485, 499, 500, 501, 515, 516, 517, 531, 532, 533, 550, 551, 552, 612, 613, 614], "schema": [58, 60, 61, 130, 148, 149, 195, 197, 198, 278, 298, 299, 303, 304, 305, 308, 311, 312, 316, 317, 318, 321, 324, 325, 329, 330, 331, 334, 337, 338, 344, 345, 346, 349, 352, 353, 357, 358, 359, 365, 368, 369, 376, 377, 378, 382, 385, 386, 390, 391, 392, 398, 401, 402, 409, 410, 411, 424, 427, 428, 435, 436, 437, 441, 444, 445, 452, 453, 454, 458, 461, 462, 469, 470, 471, 475, 478, 479, 483, 484, 485, 491, 494, 495, 499, 500, 501, 507, 510, 511, 515, 516, 517, 523, 526, 527, 531, 532, 533, 539, 542, 543, 550, 551, 552, 556, 559, 560, 612, 613, 614, 617, 620, 621], "new": [59, 63, 134, 196, 200, 282, 626], "inform": [59, 196, 588], "about": [59, 196, 624], "filepath": [60, 65, 131, 136, 197, 202, 279, 284, 304, 309, 317, 322, 330, 335, 345, 350, 358, 366, 377, 383, 391, 399, 410, 425, 436, 442, 453, 459, 470, 476, 484, 492, 500, 508, 516, 524, 532, 540, 551, 557, 589, 613, 618], "serial": [60, 61, 131, 132, 197, 198, 279, 280, 304, 305, 309, 310, 317, 318, 322, 323, 330, 331, 335, 336, 345, 346, 350, 351, 358, 359, 366, 367, 377, 378, 383, 384, 391, 392, 399, 400, 410, 411, 425, 426, 436, 437, 442, 443, 453, 454, 459, 460, 470, 471, 476, 477, 484, 485, 492, 493, 500, 501, 508, 509, 516, 517, 524, 525, 532, 533, 540, 541, 551, 552, 557, 558, 613, 614, 618, 619, 622], "like": [60, 65, 131, 136, 197, 202, 279, 284, 304, 309, 317, 322, 330, 335, 345, 350, 358, 366, 377, 383, 391, 399, 410, 425, 436, 442, 453, 459, 470, 476, 484, 492, 500, 508, 516, 524, 532, 540, 551, 557, 613, 618, 625, 626], "url": [60, 65, 197, 202, 304, 317, 330, 345, 358, 377, 391, 410, 436, 453, 470, 484, 500, 516, 532, 551, 613, 623], "precis": [62, 65, 73, 87, 107, 199, 202, 209, 227, 247], "geometr": [62, 65, 73, 87, 107, 199, 202, 209, 227, 247, 581], "map": [62, 65, 73, 76, 77, 87, 88, 107, 147, 199, 202, 209, 212, 213, 227, 228, 247, 297, 413, 419, 563, 570, 573, 593, 600, 603], "digraph": [63, 134, 200, 282], "specifi": [64, 73, 87, 107, 201, 209, 227, 247, 586, 622], "hshabl": [64, 201], "cloud": [66, 203], "pointcloud": [66, 203], "deprec": [68, 69, 70, 71, 204, 205, 206, 207, 622], "sinc": [68, 69, 70, 71, 204, 205, 206, 207], "version": [68, 69, 70, 71, 124, 204, 205, 206, 207, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616, 622, 626], "13": [68, 69, 70, 71, 204, 205, 206, 207], "edge_sampl": [68, 69, 204, 205], "instead": [68, 69, 70, 71, 139, 204, 205, 206, 207, 289, 622, 626], "n": [69, 71, 112, 205, 207, 252, 626], "node_sampl": [70, 71, 206, 207], "exclude_leav": [71, 207], "exclud": [71, 207], "leav": [71, 207], "one": [71, 79, 80, 207, 216, 218, 339, 340, 417, 418, 625, 626], "verifi": [74, 75, 78, 79, 80, 81, 85, 86, 101, 210, 211, 215, 216, 218, 219, 224, 226, 241, 407], "taken": [74, 210], "account": [74, 210], "indic": [76, 135, 212, 283, 413, 419, 626], "index": [76, 77, 88, 147, 212, 213, 228, 297], "uv": [77, 147, 213, 297], "everi": [78, 126, 159, 215, 274, 339, 340], "them": [78, 215], "network_is_connect": [78, 215], "least": [79, 158, 216, 423, 561], "leaf": [80, 218], "min_forc": [82, 91, 220, 231], "06": [82, 91, 220, 231, 339, 340, 423, 561], "check": [82, 83, 84, 100, 106, 220, 221, 223, 240, 246, 622], "larg": [82, 91, 220, 231], "enough": [82, 91, 220, 231], "minimum": [82, 91, 220, 231], "magnitud": [82, 91, 220, 231, 341], "consid": [82, 91, 220, 231], "flag": [82, 83, 159, 214, 217, 220, 221, 222, 225, 339, 340, 622, 626], "packag": [84, 100, 223, 240], "drawn": [84, 100, 223, 240], "without": [84, 85, 100, 101, 223, 224, 240, 241, 627], "shown": [84, 100, 223, 240], "furthermor": [84, 100, 223, 240], "python": [84, 100, 223, 240, 624, 625, 626], "bind": [84, 100, 223, 240], "suit": [84, 100, 223, 240], "anaconda": [84, 100, 223, 240, 626], "org": [84, 100, 223, 240, 588, 589, 623], "conda": [84, 100, 223, 240], "forg": [84, 100, 223, 240, 626], "fase": [85, 101, 224, 241], "normal": [89, 102, 229, 242], "laplacian": [89, 102, 109, 229, 242, 249], "entri": [89, 102, 229, 242, 417, 418], "diagon": [89, 102, 229, 242], "l": [89, 102, 229, 242], "dot": [89, 102, 229, 242], "centroid": [89, 102, 109, 111, 126, 229, 242, 249, 251, 274], "therefor": [89, 102, 229, 242], "By": [89, 102, 229, 242], "sign": [89, 102, 229, 242, 326, 622], "dsiplac": [89, 102, 229, 242], "could": [89, 102, 229, 242], "more": [89, 102, 229, 242, 423, 561, 588], "natur": [89, 102, 229, 242], "wai": [89, 102, 229, 242, 626], "ring": [92, 109, 232, 249], "compon": [105, 110, 245, 250, 622, 626], "neighborhood": [109, 249], "load_vector": [110, 250], "match": [117, 118, 258, 259, 512, 563, 564, 593, 594, 615], "assign": [122, 129, 253, 265, 277, 609, 615], "residu": [123, 269], "as_str": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "hash": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "comparison": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "dure": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 586, 616], "control": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616, 625], "digest": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "hexadecim": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "rather": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "than": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "byte": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "mesh": [124, 126, 272, 274, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 581, 584, 616], "v1": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "v2": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "vertex_attribut": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "vertex_sampl": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "v3": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "shortest": [125, 273], "lead": [125, 273], "kmax": [126, 274], "damp": [126, 274], "callback": [126, 274, 339, 340, 585], "callback_arg": [126, 274], "move": [126, 274, 423, 561, 625], "free": [126, 274, 622, 627], "maximum": [126, 274, 339, 340, 423, 561], "factor": [126, 274], "user": [126, 274, 588, 622, 626], "execut": [126, 274], "after": [126, 274], "pass": [126, 274, 626], "except": [126, 127, 149, 274, 275, 299, 312, 325, 338, 353, 369, 386, 402, 428, 445, 462, 479, 495, 511, 527, 543, 560, 621], "split": [127, 275, 622], "insert": [127, 275], "posit": [127, 275, 339, 340, 341, 347, 387, 480, 496, 615], "valueerror": [127, 275], "been": [129, 277, 626], "nativ": [130, 278, 308, 321, 334, 349, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 617, 625], "describ": [130, 278, 306, 308, 319, 321, 332, 334, 349, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 617], "pretti": [131, 132, 279, 280, 309, 310, 322, 323, 335, 336, 350, 351, 366, 367, 383, 384, 399, 400, 425, 426, 442, 443, 459, 460, 476, 477, 492, 493, 508, 509, 524, 525, 540, 541, 557, 558, 618, 619], "human": [131, 279, 309, 322, 335, 350, 366, 383, 399, 425, 442, 459, 476, 492, 508, 524, 540, 557, 618], "readabl": [131, 279, 309, 322, 335, 350, 366, 383, 399, 425, 442, 459, 476, 492, 508, 524, 540, 557, 618], "s": [132, 148, 149, 280, 298, 299, 306, 310, 311, 312, 323, 324, 325, 332, 336, 337, 338, 351, 352, 353, 367, 368, 369, 373, 374, 384, 385, 386, 400, 401, 402, 426, 427, 428, 432, 433, 443, 444, 445, 449, 450, 460, 461, 462, 466, 467, 477, 478, 479, 493, 494, 495, 509, 510, 511, 525, 526, 527, 541, 542, 543, 547, 548, 558, 559, 560, 619, 620, 621, 626], "newli": [134, 282], "write": [136, 284], "modifi": [138, 139, 146, 288, 289, 296, 403, 627], "copi": [139, 289, 627], "origin": [139, 159, 221, 268, 289, 429, 446, 463], "unset": [140, 141, 290, 291], "implicitli": [140, 141, 290, 291], "back": [140, 141, 290, 291], "store": [140, 141, 290, 291], "attr_dict": [142, 143, 144, 145, 292, 293, 294, 295], "kwattr": [142, 143, 144, 145, 292, 293, 294, 295], "updat": [142, 143, 144, 145, 292, 293, 294, 295, 578, 587, 607, 622], "compil": [142, 143, 144, 145, 292, 293, 294, 295], "remain": [142, 143, 144, 145, 292, 293, 294, 295], "valid": [148, 149, 298, 299, 311, 312, 324, 325, 337, 338, 352, 353, 368, 369, 385, 386, 401, 402, 427, 428, 444, 445, 461, 462, 478, 479, 494, 495, 510, 511, 526, 527, 542, 543, 559, 560, 620, 621], "against": [148, 149, 298, 299, 311, 312, 324, 325, 337, 338, 339, 340, 352, 353, 368, 369, 385, 386, 401, 402, 427, 428, 444, 445, 461, 462, 478, 479, 494, 495, 504, 510, 511, 526, 527, 542, 543, 559, 560, 620, 621], "schemaerror": [148, 298, 311, 324, 337, 352, 368, 385, 401, 427, 444, 461, 478, 494, 510, 526, 542, 559, 620], "jsonschema": [149, 299, 312, 325, 338, 353, 369, 386, 402, 428, 445, 462, 479, 495, 511, 527, 543, 560, 621], "validationerror": [149, 299, 312, 325, 338, 353, 369, 386, 402, 428, 445, 462, 479, 495, 511, 527, 543, 560, 621], "veri": 150, "mark": [155, 339, 340], "continu": [155, 626], "thei": [155, 622, 626], "aren": 155, "simultan": [157, 174, 286, 625], "process": 159, "travers": 159, "begin": 159, "sequenc": [159, 185, 253, 270, 287], "characterist": 159, "append": 159, "unassign": 159, "part": [159, 626], "previou": 159, "recalcul": 159, "call": [159, 622, 626], "attach": [162, 164], "given": [185, 564, 594], "whether": [214, 217, 225, 627], "k": 253, "largest": 270, "extra": [306, 319, 332, 591, 622], "absolut": [326, 373, 374, 432, 433, 449, 450, 466, 467, 547, 548], "howev": [326, 625], "combinatori": [326, 623, 625], "preserv": 326, "todo": 326, "addexplicit": 326, "signatur": [326, 622], "constructor": 326, "run": [339, 340, 423, 561, 625, 626], "distanc": [339, 340, 361, 394, 487, 503, 519, 535], "threshold": [339, 340, 423, 561], "converg": [339, 340, 423, 561], "compar": [339, 340, 504], "sum": [339, 340], "hit": [339, 340, 423, 561, 626], "befor": [339, 340, 626], "consum": [339, 340], "calcul": [339, 340, 373, 374, 412, 432, 433, 449, 450, 466, 467, 547, 548, 622], "stop": [339, 340, 423, 561], "earli": [339, 340, 423, 561], "oper": [339, 340, 625], "formdiagram": [339, 340, 423, 561, 562, 615], "weight": [354, 387, 480, 496, 512, 528], "floatconstraint": [354, 528, 622], "reach": [354, 528], "error": [361, 394, 487, 503, 519, 535, 622, 626], "squar": [361, 394, 423, 487, 503, 519, 535, 561], "differ": [361, 394, 487, 503, 519, 535, 625], "edgeparamet": [370, 544], "parametr": [372, 431, 448, 465, 546], "lower": [373, 432, 449, 466, 547], "minu": [373, 432, 449, 466, 547], "upper": [374, 433, 450, 467, 548], "plu": [374, 433, 450, 467, 548], "vectorconstraint": [387, 480, 496, 512, 622], "pull": [387, 480, 496], "rai": 387, "meet": [403, 625], "problem": [406, 407, 423, 561, 625, 626], "sane": 407, "mind": 407, "ad": [414, 622], "grad_func": 416, "paremet": 418, "care": 418, "keep": [418, 622, 626], "nlopt": [423, 561, 622], "local": [423, 561], "sequenti": [423, 561], "program": [423, 561, 626], "low": [423, 561], "storag": [423, 561], "broyden": [423, 561], "fletcher": [423, 561], "goldfarb": [423, 561], "shanno": [423, 561], "auglag": [423, 561], "augment": [423, 561], "lagrangian": [423, 561], "mma": [423, 561], "asymptot": [423, 561], "tnewton": [423, 561], "precondit": [423, 561], "truncat": [423, 561], "newton": [423, 561], "document": [423, 561, 622, 626, 627], "detail": [423, 561], "theoret": [423, 561], "underpin": [423, 561], "ignor": [423, 561, 622], "until": [423, 561], "exhaust": [423, 561], "cem": [423, 561, 623, 624], "nodeparamet": [429, 446, 463], "constrain": [561, 623, 625, 626], "task": 561, "through": [561, 626], "proxi": 561, "server": 561, "hyperspac": 561, "tunnel": 561, "grad_norm": 561, "cummul": 561, "durat": [561, 586], "millisecond": 561, "statu": 561, "item": [562, 563, 564, 577, 581, 582, 584, 592, 593, 594, 606], "networkartist": [562, 592], "artist": [562, 563, 564, 577, 581, 592, 593, 594, 606, 622], "draw": [562, 569, 570, 571, 572, 573, 574, 575, 581, 592, 599, 600, 601, 602, 603, 604, 622], "form_diagram": 562, "collect": [563, 564, 569, 593, 594, 599, 626], "relev": [563, 564, 593, 594], "see": [563, 564, 588, 589, 593, 594], "accord": [563, 593], "item_artist": [563, 593], "regist": [563, 588, 593], "artist_typ": [564, 577, 594, 606], "clear": [566, 567, 596, 597], "canva": [566, 567, 596, 597, 626], "label": [568, 570, 573, 598, 600, 603], "entir": [569, 599], "text": [570, 573, 600, 603], "select": [570, 573, 600, 603], "act": 572, "view": [576, 579, 591, 605, 608], "item_typ": [577, 606], "context": [577, 606], "blender": [577, 606, 625], "visual": [577, 578, 606, 607, 626], "limit": [578, 607, 626, 627], "corner": [579, 608], "box": [579, 591, 608], "thin": 580, "wrapper": 580, "compas_plott": 580, "api": [580, 588, 589, 625], "union": [581, 584], "primit": [581, 584], "plotterartist": [581, 582, 584], "paus": [583, 587], "interv": [585, 586], "frame": [585, 622, 625], "dpi": 585, "150": 585, "decor": 585, "dynam": 585, "amount": 587, "listen": 588, "pick": 588, "event": [588, 627], "handler": 588, "doc": 588, "mpl_connect": 588, "handl": 588, "matplotlib": [588, 589], "backend_bases_api": 588, "backend_bas": 588, "figurecanvasbas": 588, "event_handl": 588, "full": [589, 622], "overview": 589, "configur": 589, "pyplot_api": 589, "pyplot": 589, "savefig": 589, "zoom": 591, "topology_diagram": 592, "inscrib": 602, "circl": 602, "node_support": 609, "notabl": 622, "project": [622, 623], "adher": 622, "semant": 622, "implement": 622, "diagramobject": 622, "topologydiagramobject": 622, "formdiagramobject": 622, "proxyserv": 622, "gh": [622, 626], "acceler": 622, "__str__": 622, "constrainedformfind": 622, "nlopt_statu": 622, "better": 622, "interpret": 622, "ghpython": [622, 626], "bug": 622, "registr": 622, "creation": 622, "caus": 622, "old": 622, "compas_rhino": [622, 626], "rhinoplan": 622, "from_geometri": 622, "from_rhino_point_and_vector": 622, "from_rhino_point": 622, "from_rhino_lin": 622, "ghdata": 622, "jenssen": 622, "tube": 622, "is_node_support": 622, "renam": 622, "search": 622, "topologyartist": 622, "formartist": 622, "via": [622, 625], "plugin": [622, 625], "global": [622, 625], "color": 622, "dark": 622, "blue": 622, "grai": 622, "mechan": 622, "compli": 622, "topologyplott": 622, "formplott": 622, "serializ": 622, "pin": 622, "depend": [622, 625, 626], "8": 622, "due": 622, "networkplott": 622, "green": 622, "light": 622, "assembl": 622, "ghplugin": 622, "wrap": 622, "edgesearch": 622, "drop": [622, 626], "ld": 622, "subscript": 622, "skip": 622, "assembletopologydiagram": 622, "draw_arrow": 622, "_draw_load": 622, "_draw_load_arrow": 622, "arrow": 622, "export": 622, "draw_trail": 622, "topologyartistcompon": 622, "number_of_trail_edg": 622, "number_of_deviation_edg": 622, "__repr__": 622, "edge_kei": 622, "node_kei": 622, "replac": [622, 626], "noderesult": 622, "wit": 622, "supportnoderesult": 622, "merg": [622, 627], "access": 622, "expos": 622, "hard": 622, "code": [622, 623, 625, 626], "ghcompon": 622, "to_compa": 622, "planeconstraint": 622, "formfind": 622, "eps_min": 622, "equilibrium_st": 622, "equilibrium_state_numpi": 622, "draw_seg": 622, "scheme": 622, "draw_edg": 622, "tight": 622, "autoscal": 622, "save": 622, "overcrop": 622, "imag": 622, "custom": 622, "form_plotter_proxi": 622, "topology_plotter_proxi": 622, "polygon": 622, "static_equilibrium_numpi": 622, "took": 622, "temporari": 622, "patch": 622, "deviationedgelengthconstraint": 622, "autograd": 622, "is_auxiliary_trail_edg": 622, "filter": 622, "number_of_auxiliary_trail": 622, "properti": 622, "auxiliary_trail_vector": 622, "under": 622, "anyth": 622, "longer": [622, 626], "reflect": 622, "immut": 622, "children": 622, "refactor": 622, "folder": 622, "nodemixin": 622, "node_xyz": 622, "rhino_instal": 622, "streamlin": 622, "symlink": 622, "src": 622, "ghuser": [622, 626], "gitignor": 622, "uninstal": [622, 626], "tag": 622, "regex": 622, "bumpvers": 622, "cfg": 622, "md": 622, "rst": 622, "research": 623, "pleas": [623, 626], "our": [623, 625, 626], "paper": 623, "preprint": 623, "misc": 623, "pastrana_constrainedformfinding_2021": 623, "titl": 623, "differenti": [623, 625], "pastrana": [623, 625, 627], "rafael": [623, 625, 627], "ohlbrock": [623, 625], "patrick": 623, "ol": [623, 625], "acunto": [623, 625], "pierluigi": [623, 625], "parascho": [623, 625], "stefana": [623, 625], "year": 623, "2021": [623, 627], "arxiv": 623, "ab": 623, "2111": 623, "02607": 623, "eprint": 623, "archiveprefix": 623, "And": 623, "repositori": 623, "softwar": [623, 625, 627], "model": [623, 625, 626], "framework": [623, 625], "doi": 623, "5281": 623, "zenodo": 623, "5705740": 623, "arpastrana": 623, "github": 623, "io": 623, "_cem": 623, "arpj": 623, "princeton": [623, 625], "arch": 623, "ethz": 623, "ch": 623, "oleohlbrock": 623, "pierluigidacunto": 623, "tum": 623, "de": 623, "edu": 623, "stefanaparascho": 623, "excit": 624, "mai": [624, 626], "help": 624, "approach": 625, "spatial": 625, "bar": 625, "subject": [625, 627], "combin": 625, "design": 625, "encapsul": 625, "open": 625, "tool": [625, 626], "enabl": 625, "formul": 625, "solut": 625, "plain": 625, "mix": 625, "explor": 625, "wider": 625, "spectrum": 625, "typolog": 625, "space": 625, "go": [625, 626], "beyond": 625, "convent": 625, "catalog": 625, "shell": 625, "cabl": 625, "effici": 625, "priori": 625, "best": 625, "fit": [625, 627], "shape": 625, "restrain": 625, "usabl": 625, "across": 625, "system": 625, "window": [625, 626], "maco": [625, 626], "linux": [625, 626], "perhap": 625, "dai": [625, 626], "also": 625, "metavers": 625, "cad": 625, "work": [625, 626], "necessari": 625, "interfac": 625, "seamlessli": 625, "insid": 625, "popular": 625, "environ": 625, "As": [625, 626], "extens": [625, 626], "offer": 625, "integr": 625, "exchang": 625, "ecosystem": 625, "those": [625, 626], "slider": 625, "person": [625, 627], "worri": 625, "ship": 625, "too": 625, "precook": 625, "readili": 625, "engin": [625, 626], "your": 625, "spaghetti": 625, "pipelin": 625, "develop": 625, "endors": 625, "introduct": 625, "changelog": 625, "cite": 625, "licens": 625, "four": 626, "step": 626, "we": 626, "have": 626, "machin": 626, "command": 626, "prompt": 626, "termin": 626, "chose": 626, "spacecowboi": 626, "prefer": 626, "bubbl": 626, "isol": 626, "In": 626, "word": 626, "what": 626, "happen": 626, "stai": 626, "requir": 626, "recommend": 626, "consult": 626, "encount": 626, "being": 626, "abl": 626, "microsoft": 626, "miss": 626, "fail": 626, "saniti": 626, "known": 626, "issu": 626, "page": 626, "instruct": 626, "how": 626, "liner": 626, "To": 626, "everyth": 626, "enter": 626, "celebr": 626, "There": 626, "complex": 626, "easier": 626, "do": [626, 627], "few": 626, "mous": 626, "click": 626, "hundr": 626, "bit": 626, "familiar": 626, "addition": 626, "close": 626, "three": 626, "sure": 626, "proceed": 626, "case": 626, "older": 626, "m": 626, "compani": 626, "let": 626, "compas_ghpython": 626, "were": 626, "wonder": 626, "launch": 626, "onto": 626, "send": 626, "pictur": 626, "onc": 626, "forget": 626, "who": 626, "don": 626, "know": 626, "consequ": 626, "alreadi": 626, "NOT": [626, 627], "past": 626, "latest": 626, "upgrad": 626, "altern": 626, "switch": 626, "had": 626, "mit": 627, "copyright": 627, "2020": 627, "permiss": 627, "herebi": 627, "grant": 627, "charg": 627, "obtain": 627, "associ": 627, "deal": 627, "restrict": 627, "right": 627, "publish": 627, "distribut": 627, "sublicens": 627, "sell": 627, "permit": 627, "whom": 627, "furnish": 627, "so": 627, "abov": 627, "notic": 627, "shall": 627, "substanti": 627, "portion": 627, "THE": 627, "IS": 627, "AS": 627, "warranti": 627, "OF": 627, "kind": 627, "express": 627, "OR": 627, "impli": 627, "BUT": 627, "TO": 627, "merchant": 627, "FOR": 627, "particular": 627, "purpos": 627, "AND": 627, "noninfring": 627, "NO": 627, "author": 627, "holder": 627, "BE": 627, "liabl": 627, "claim": 627, "damag": 627, "liabil": 627, "action": 627, "contract": 627, "tort": 627, "aris": 627, "WITH": 627}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"], [21, 0, 0, "-", "viewers"]], "compas_cem.diagrams": [[22, 1, 1, "", "FormDiagram"], [150, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[23, 2, 1, "", "ToString"], [24, 2, 1, "", "add_edge"], [25, 2, 1, "", "add_node"], [26, 2, 1, "", "adjacency_matrix"], [27, 2, 1, "", "clear"], [28, 2, 1, "", "complement"], [29, 2, 1, "", "connected_edges"], [30, 2, 1, "", "connectivity_matrix"], [31, 2, 1, "", "copy"], [32, 2, 1, "", "count_crossings"], [33, 2, 1, "", "degree"], [34, 2, 1, "", "degree_in"], [35, 2, 1, "", "degree_matrix"], [36, 2, 1, "", "degree_out"], [37, 2, 1, "", "delete_edge"], [38, 2, 1, "", "delete_node"], [39, 2, 1, "", "edge_attribute"], [40, 2, 1, "", "edge_attributes"], [41, 2, 1, "", "edge_coordinates"], [42, 2, 1, "", "edge_direction"], [43, 2, 1, "", "edge_force"], [44, 2, 1, "", "edge_length"], [45, 2, 1, "", "edge_length_2"], [46, 2, 1, "", "edge_midpoint"], [47, 2, 1, "", "edge_point"], [48, 2, 1, "", "edge_sample"], [49, 2, 1, "", "edge_vector"], [50, 2, 1, "", "edges"], [51, 2, 1, "", "edges_attribute"], [52, 2, 1, "", "edges_attributes"], [53, 2, 1, "", "edges_where"], [54, 2, 1, "", "edges_where_predicate"], [55, 2, 1, "", "embed_in_plane"], [56, 2, 1, "", "find_crossings"], [57, 2, 1, "", "find_cycles"], [58, 2, 1, "", "from_data"], [59, 2, 1, "", "from_edges"], [60, 2, 1, "", "from_json"], [61, 2, 1, "", "from_jsonstring"], [62, 2, 1, "", "from_lines"], [63, 2, 1, "", "from_networkx"], [64, 2, 1, "", "from_nodes_and_edges"], [65, 2, 1, "", "from_obj"], [66, 2, 1, "", "from_pointcloud"], [67, 2, 1, "", "from_topology_diagram"], [68, 2, 1, "", "get_any_edge"], [69, 2, 1, "", "get_any_edges"], [70, 2, 1, "", "get_any_node"], [71, 2, 1, "", "get_any_nodes"], [72, 2, 1, "", "gkey"], [73, 2, 1, "", "gkey_key"], [74, 2, 1, "", "has_edge"], [75, 2, 1, "", "has_node"], [76, 2, 1, "", "index_key"], [77, 2, 1, "", "index_uv"], [78, 2, 1, "", "is_connected"], [79, 2, 1, "", "is_crossed"], [80, 2, 1, "", "is_leaf"], [81, 2, 1, "", "is_node_connected"], [82, 2, 1, "", "is_node_loaded"], [83, 2, 1, "", "is_node_support"], [84, 2, 1, "", "is_planar"], [85, 2, 1, "", "is_planar_embedding"], [86, 2, 1, "", "is_xy"], [87, 2, 1, "", "key_gkey"], [88, 2, 1, "", "key_index"], [89, 2, 1, "", "laplacian_matrix"], [90, 2, 1, "", "leaves"], [91, 2, 1, "", "loaded_nodes"], [92, 2, 1, "", "neighborhood"], [93, 2, 1, "", "neighbors"], [94, 2, 1, "", "neighbors_in"], [95, 2, 1, "", "neighbors_out"], [96, 2, 1, "", "network_adjacency_matrix"], [97, 2, 1, "", "network_connectivity_matrix"], [98, 2, 1, "", "network_degree_matrix"], [99, 2, 1, "", "network_embed_in_plane"], [100, 2, 1, "", "network_is_planar"], [101, 2, 1, "", "network_is_planar_embedding"], [102, 2, 1, "", "network_laplacian_matrix"], [103, 2, 1, "", "node_attribute"], [104, 2, 1, "", "node_attributes"], [105, 2, 1, "", "node_coordinates"], [106, 2, 1, "", "node_exists"], [107, 2, 1, "", "node_gkey"], [108, 2, 1, "", "node_key"], [109, 2, 1, "", "node_laplacian"], [110, 2, 1, "", "node_load"], [111, 2, 1, "", "node_neighborhood_centroid"], [112, 2, 1, "", "node_sample"], [113, 2, 1, "", "node_xyz"], [114, 2, 1, "", "nodes"], [115, 2, 1, "", "nodes_attribute"], [116, 2, 1, "", "nodes_attributes"], [117, 2, 1, "", "nodes_where"], [118, 2, 1, "", "nodes_where_predicate"], [119, 2, 1, "", "number_of_edges"], [120, 2, 1, "", "number_of_loaded_nodes"], [121, 2, 1, "", "number_of_nodes"], [122, 2, 1, "", "number_of_support_nodes"], [123, 2, 1, "", "reaction_force"], [124, 2, 1, "", "sha256"], [125, 2, 1, "", "shortest_path"], [126, 2, 1, "", "smooth"], [127, 2, 1, "", "split_edge"], [128, 2, 1, "", "summary"], [129, 2, 1, "", "support_nodes"], [130, 2, 1, "", "to_data"], [131, 2, 1, "", "to_json"], [132, 2, 1, "", "to_jsonstring"], [133, 2, 1, "", "to_lines"], [134, 2, 1, "", "to_networkx"], [135, 2, 1, "", "to_nodes_and_edges"], [136, 2, 1, "", "to_obj"], [137, 2, 1, "", "to_points"], [138, 2, 1, "", "transform"], [139, 2, 1, "", "transformed"], [140, 2, 1, "", "unset_edge_attribute"], [141, 2, 1, "", "unset_node_attribute"], [142, 2, 1, "", "update_dea"], [143, 2, 1, "", "update_default_edge_attributes"], [144, 2, 1, "", "update_default_node_attributes"], [145, 2, 1, "", "update_dna"], [146, 2, 1, "", "update_node_xyz"], [147, 2, 1, "", "uv_index"], [148, 2, 1, "", "validate_data"], [149, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[151, 2, 1, "", "ToString"], [152, 2, 1, "", "add_edge"], [153, 2, 1, "", "add_load"], [154, 2, 1, "", "add_node"], [155, 2, 1, "", "add_support"], [156, 2, 1, "", "adjacency_matrix"], [157, 2, 1, "", "auxiliary_trail_edges"], [158, 2, 1, "", "auxiliary_trails"], [159, 2, 1, "", "build_trails"], [160, 2, 1, "", "clear"], [161, 2, 1, "", "complement"], [162, 2, 1, "", "connected_deviation_edges"], [163, 2, 1, "", "connected_edges"], [164, 2, 1, "", "connected_trail_edges"], [165, 2, 1, "", "connectivity_matrix"], [166, 2, 1, "", "copy"], [167, 2, 1, "", "count_crossings"], [168, 2, 1, "", "degree"], [169, 2, 1, "", "degree_in"], [170, 2, 1, "", "degree_matrix"], [171, 2, 1, "", "degree_out"], [172, 2, 1, "", "delete_edge"], [173, 2, 1, "", "delete_node"], [174, 2, 1, "", "deviation_edges"], [175, 2, 1, "", "edge_attribute"], [176, 2, 1, "", "edge_attributes"], [177, 2, 1, "", "edge_coordinates"], [178, 2, 1, "", "edge_direction"], [179, 2, 1, "", "edge_force"], [180, 2, 1, "", "edge_length"], [181, 2, 1, "", "edge_length_2"], [182, 2, 1, "", "edge_midpoint"], [183, 2, 1, "", "edge_point"], [184, 2, 1, "", "edge_sample"], [185, 2, 1, "", "edge_sequence"], [186, 2, 1, "", "edge_vector"], [187, 2, 1, "", "edges"], [188, 2, 1, "", "edges_attribute"], [189, 2, 1, "", "edges_attributes"], [190, 2, 1, "", "edges_where"], [191, 2, 1, "", "edges_where_predicate"], [192, 2, 1, "", "embed_in_plane"], [193, 2, 1, "", "find_crossings"], [194, 2, 1, "", "find_cycles"], [195, 2, 1, "", "from_data"], [196, 2, 1, "", "from_edges"], [197, 2, 1, "", "from_json"], [198, 2, 1, "", "from_jsonstring"], [199, 2, 1, "", "from_lines"], [200, 2, 1, "", "from_networkx"], [201, 2, 1, "", "from_nodes_and_edges"], [202, 2, 1, "", "from_obj"], [203, 2, 1, "", "from_pointcloud"], [204, 2, 1, "", "get_any_edge"], [205, 2, 1, "", "get_any_edges"], [206, 2, 1, "", "get_any_node"], [207, 2, 1, "", "get_any_nodes"], [208, 2, 1, "", "gkey"], [209, 2, 1, "", "gkey_key"], [210, 2, 1, "", "has_edge"], [211, 2, 1, "", "has_node"], [212, 2, 1, "", "index_key"], [213, 2, 1, "", "index_uv"], [214, 2, 1, "", "is_auxiliary_trail_edge"], [215, 2, 1, "", "is_connected"], [216, 2, 1, "", "is_crossed"], [217, 2, 1, "", "is_deviation_edge"], [218, 2, 1, "", "is_leaf"], [219, 2, 1, "", "is_node_connected"], [220, 2, 1, "", "is_node_loaded"], [221, 2, 1, "", "is_node_origin"], [222, 2, 1, "", "is_node_support"], [223, 2, 1, "", "is_planar"], [224, 2, 1, "", "is_planar_embedding"], [225, 2, 1, "", "is_trail_edge"], [226, 2, 1, "", "is_xy"], [227, 2, 1, "", "key_gkey"], [228, 2, 1, "", "key_index"], [229, 2, 1, "", "laplacian_matrix"], [230, 2, 1, "", "leaves"], [231, 2, 1, "", "loaded_nodes"], [232, 2, 1, "", "neighborhood"], [233, 2, 1, "", "neighbors"], [234, 2, 1, "", "neighbors_in"], [235, 2, 1, "", "neighbors_out"], [236, 2, 1, "", "network_adjacency_matrix"], [237, 2, 1, "", "network_connectivity_matrix"], [238, 2, 1, "", "network_degree_matrix"], [239, 2, 1, "", "network_embed_in_plane"], [240, 2, 1, "", "network_is_planar"], [241, 2, 1, "", "network_is_planar_embedding"], [242, 2, 1, "", "network_laplacian_matrix"], [243, 2, 1, "", "node_attribute"], [244, 2, 1, "", "node_attributes"], [245, 2, 1, "", "node_coordinates"], [246, 2, 1, "", "node_exists"], [247, 2, 1, "", "node_gkey"], [248, 2, 1, "", "node_key"], [249, 2, 1, "", "node_laplacian"], [250, 2, 1, "", "node_load"], [251, 2, 1, "", "node_neighborhood_centroid"], [252, 2, 1, "", "node_sample"], [253, 2, 1, "", "node_sequence"], [254, 2, 1, "", "node_xyz"], [255, 2, 1, "", "nodes"], [256, 2, 1, "", "nodes_attribute"], [257, 2, 1, "", "nodes_attributes"], [258, 2, 1, "", "nodes_where"], [259, 2, 1, "", "nodes_where_predicate"], [260, 2, 1, "", "number_of_auxiliary_trails"], [261, 2, 1, "", "number_of_deviation_edges"], [262, 2, 1, "", "number_of_edges"], [263, 2, 1, "", "number_of_loaded_nodes"], [264, 2, 1, "", "number_of_nodes"], [265, 2, 1, "", "number_of_support_nodes"], [266, 2, 1, "", "number_of_trail_edges"], [267, 2, 1, "", "number_of_trails"], [268, 2, 1, "", "origin_nodes"], [269, 2, 1, "", "reaction_force"], [270, 2, 1, "", "sequence_max"], [271, 2, 1, "", "sequences"], [272, 2, 1, "", "sha256"], [273, 2, 1, "", "shortest_path"], [274, 2, 1, "", "smooth"], [275, 2, 1, "", "split_edge"], [276, 2, 1, "", "summary"], [277, 2, 1, "", "support_nodes"], [278, 2, 1, "", "to_data"], [279, 2, 1, "", "to_json"], [280, 2, 1, "", "to_jsonstring"], [281, 2, 1, "", "to_lines"], [282, 2, 1, "", "to_networkx"], [283, 2, 1, "", "to_nodes_and_edges"], [284, 2, 1, "", "to_obj"], [285, 2, 1, "", "to_points"], [286, 2, 1, "", "trail_edges"], [287, 2, 1, "", "trails"], [288, 2, 1, "", "transform"], [289, 2, 1, "", "transformed"], [290, 2, 1, "", "unset_edge_attribute"], [291, 2, 1, "", "unset_node_attribute"], [292, 2, 1, "", "update_dea"], [293, 2, 1, "", "update_default_edge_attributes"], [294, 2, 1, "", "update_default_node_attributes"], [295, 2, 1, "", "update_dna"], [296, 2, 1, "", "update_node_xyz"], [297, 2, 1, "", "uv_index"], [298, 2, 1, "", "validate_data"], [299, 2, 1, "", "validate_json"]], "compas_cem.elements": [[300, 1, 1, "", "DeviationEdge"], [313, 1, 1, "", "Node"], [326, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[301, 2, 1, "", "ToString"], [302, 2, 1, "", "copy"], [303, 2, 1, "", "from_data"], [304, 2, 1, "", "from_json"], [305, 2, 1, "", "from_jsonstring"], [306, 2, 1, "", "from_line"], [307, 2, 1, "", "sha256"], [308, 2, 1, "", "to_data"], [309, 2, 1, "", "to_json"], [310, 2, 1, "", "to_jsonstring"], [311, 2, 1, "", "validate_data"], [312, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[314, 2, 1, "", "ToString"], [315, 2, 1, "", "copy"], [316, 2, 1, "", "from_data"], [317, 2, 1, "", "from_json"], [318, 2, 1, "", "from_jsonstring"], [319, 2, 1, "", "from_point"], [320, 2, 1, "", "sha256"], [321, 2, 1, "", "to_data"], [322, 2, 1, "", "to_json"], [323, 2, 1, "", "to_jsonstring"], [324, 2, 1, "", "validate_data"], [325, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[327, 2, 1, "", "ToString"], [328, 2, 1, "", "copy"], [329, 2, 1, "", "from_data"], [330, 2, 1, "", "from_json"], [331, 2, 1, "", "from_jsonstring"], [332, 2, 1, "", "from_line"], [333, 2, 1, "", "sha256"], [334, 2, 1, "", "to_data"], [335, 2, 1, "", "to_json"], [336, 2, 1, "", "to_jsonstring"], [337, 2, 1, "", "validate_data"], [338, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[339, 3, 1, "", "static_equilibrium"], [340, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[341, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[342, 2, 1, "", "ToString"], [343, 2, 1, "", "copy"], [344, 2, 1, "", "from_data"], [345, 2, 1, "", "from_json"], [346, 2, 1, "", "from_jsonstring"], [347, 2, 1, "", "from_point_and_vector"], [348, 2, 1, "", "sha256"], [349, 2, 1, "", "to_data"], [350, 2, 1, "", "to_json"], [351, 2, 1, "", "to_jsonstring"], [352, 2, 1, "", "validate_data"], [353, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[354, 1, 1, "", "DeviationEdgeLengthConstraint"], [370, 1, 1, "", "DeviationEdgeParameter"], [387, 1, 1, "", "LineConstraint"], [403, 1, 1, "", "Optimizer"], [429, 1, 1, "", "OriginNodeXParameter"], [446, 1, 1, "", "OriginNodeYParameter"], [463, 1, 1, "", "OriginNodeZParameter"], [480, 1, 1, "", "PlaneConstraint"], [496, 1, 1, "", "PointConstraint"], [512, 1, 1, "", "ReactionForceConstraint"], [528, 1, 1, "", "TrailEdgeForceConstraint"], [544, 1, 1, "", "TrailEdgeParameter"], [561, 3, 1, "", "solve_nlopt_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[355, 2, 1, "", "ToString"], [356, 2, 1, "", "copy"], [357, 2, 1, "", "from_data"], [358, 2, 1, "", "from_json"], [359, 2, 1, "", "from_jsonstring"], [360, 2, 1, "", "key"], [361, 2, 1, "", "penalty"], [362, 2, 1, "", "reference"], [363, 2, 1, "", "sha256"], [364, 2, 1, "", "target"], [365, 2, 1, "", "to_data"], [366, 2, 1, "", "to_json"], [367, 2, 1, "", "to_jsonstring"], [368, 2, 1, "", "validate_data"], [369, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[371, 2, 1, "", "ToString"], [372, 2, 1, "", "attr_name"], [373, 2, 1, "", "bound_low"], [374, 2, 1, "", "bound_up"], [375, 2, 1, "", "copy"], [376, 2, 1, "", "from_data"], [377, 2, 1, "", "from_json"], [378, 2, 1, "", "from_jsonstring"], [379, 2, 1, "", "key"], [380, 2, 1, "", "sha256"], [381, 2, 1, "", "start_value"], [382, 2, 1, "", "to_data"], [383, 2, 1, "", "to_json"], [384, 2, 1, "", "to_jsonstring"], [385, 2, 1, "", "validate_data"], [386, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[388, 2, 1, "", "ToString"], [389, 2, 1, "", "copy"], [390, 2, 1, "", "from_data"], [391, 2, 1, "", "from_json"], [392, 2, 1, "", "from_jsonstring"], [393, 2, 1, "", "key"], [394, 2, 1, "", "penalty"], [395, 2, 1, "", "reference"], [396, 2, 1, "", "sha256"], [397, 2, 1, "", "target"], [398, 2, 1, "", "to_data"], [399, 2, 1, "", "to_json"], [400, 2, 1, "", "to_jsonstring"], [401, 2, 1, "", "validate_data"], [402, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[404, 2, 1, "", "ToString"], [405, 2, 1, "", "add_constraint"], [406, 2, 1, "", "add_parameter"], [407, 2, 1, "", "check_optimization_sanity"], [408, 2, 1, "", "copy"], [409, 2, 1, "", "from_data"], [410, 2, 1, "", "from_json"], [411, 2, 1, "", "from_jsonstring"], [412, 2, 1, "", "gradient_func"], [413, 2, 1, "", "index_parameter"], [414, 2, 1, "", "number_of_constraints"], [415, 2, 1, "", "number_of_parameters"], [416, 2, 1, "", "objective_func"], [417, 2, 1, "", "optimization_bounds"], [418, 2, 1, "", "optimization_parameters"], [419, 2, 1, "", "parameter_index"], [420, 2, 1, "", "remove_constraint"], [421, 2, 1, "", "remove_parameter"], [422, 2, 1, "", "sha256"], [423, 2, 1, "", "solve_nlopt"], [424, 2, 1, "", "to_data"], [425, 2, 1, "", "to_json"], [426, 2, 1, "", "to_jsonstring"], [427, 2, 1, "", "validate_data"], [428, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[430, 2, 1, "", "ToString"], [431, 2, 1, "", "attr_name"], [432, 2, 1, "", "bound_low"], [433, 2, 1, "", "bound_up"], [434, 2, 1, "", "copy"], [435, 2, 1, "", "from_data"], [436, 2, 1, "", "from_json"], [437, 2, 1, "", "from_jsonstring"], [438, 2, 1, "", "key"], [439, 2, 1, "", "sha256"], [440, 2, 1, "", "start_value"], [441, 2, 1, "", "to_data"], [442, 2, 1, "", "to_json"], [443, 2, 1, "", "to_jsonstring"], [444, 2, 1, "", "validate_data"], [445, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[447, 2, 1, "", "ToString"], [448, 2, 1, "", "attr_name"], [449, 2, 1, "", "bound_low"], [450, 2, 1, "", "bound_up"], [451, 2, 1, "", "copy"], [452, 2, 1, "", "from_data"], [453, 2, 1, "", "from_json"], [454, 2, 1, "", "from_jsonstring"], [455, 2, 1, "", "key"], [456, 2, 1, "", "sha256"], [457, 2, 1, "", "start_value"], [458, 2, 1, "", "to_data"], [459, 2, 1, "", "to_json"], [460, 2, 1, "", "to_jsonstring"], [461, 2, 1, "", "validate_data"], [462, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[464, 2, 1, "", "ToString"], [465, 2, 1, "", "attr_name"], [466, 2, 1, "", "bound_low"], [467, 2, 1, "", "bound_up"], [468, 2, 1, "", "copy"], [469, 2, 1, "", "from_data"], [470, 2, 1, "", "from_json"], [471, 2, 1, "", "from_jsonstring"], [472, 2, 1, "", "key"], [473, 2, 1, "", "sha256"], [474, 2, 1, "", "start_value"], [475, 2, 1, "", "to_data"], [476, 2, 1, "", "to_json"], [477, 2, 1, "", "to_jsonstring"], [478, 2, 1, "", "validate_data"], [479, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[481, 2, 1, "", "ToString"], [482, 2, 1, "", "copy"], [483, 2, 1, "", "from_data"], [484, 2, 1, "", "from_json"], [485, 2, 1, "", "from_jsonstring"], [486, 2, 1, "", "key"], [487, 2, 1, "", "penalty"], [488, 2, 1, "", "reference"], [489, 2, 1, "", "sha256"], [490, 2, 1, "", "target"], [491, 2, 1, "", "to_data"], [492, 2, 1, "", "to_json"], [493, 2, 1, "", "to_jsonstring"], [494, 2, 1, "", "validate_data"], [495, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[497, 2, 1, "", "ToString"], [498, 2, 1, "", "copy"], [499, 2, 1, "", "from_data"], [500, 2, 1, "", "from_json"], [501, 2, 1, "", "from_jsonstring"], [502, 2, 1, "", "key"], [503, 2, 1, "", "penalty"], [504, 2, 1, "", "reference"], [505, 2, 1, "", "sha256"], [506, 2, 1, "", "target"], [507, 2, 1, "", "to_data"], [508, 2, 1, "", "to_json"], [509, 2, 1, "", "to_jsonstring"], [510, 2, 1, "", "validate_data"], [511, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[513, 2, 1, "", "ToString"], [514, 2, 1, "", "copy"], [515, 2, 1, "", "from_data"], [516, 2, 1, "", "from_json"], [517, 2, 1, "", "from_jsonstring"], [518, 2, 1, "", "key"], [519, 2, 1, "", "penalty"], [520, 2, 1, "", "reference"], [521, 2, 1, "", "sha256"], [522, 2, 1, "", "target"], [523, 2, 1, "", "to_data"], [524, 2, 1, "", "to_json"], [525, 2, 1, "", "to_jsonstring"], [526, 2, 1, "", "validate_data"], [527, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[529, 2, 1, "", "ToString"], [530, 2, 1, "", "copy"], [531, 2, 1, "", "from_data"], [532, 2, 1, "", "from_json"], [533, 2, 1, "", "from_jsonstring"], [534, 2, 1, "", "key"], [535, 2, 1, "", "penalty"], [536, 2, 1, "", "reference"], [537, 2, 1, "", "sha256"], [538, 2, 1, "", "target"], [539, 2, 1, "", "to_data"], [540, 2, 1, "", "to_json"], [541, 2, 1, "", "to_jsonstring"], [542, 2, 1, "", "validate_data"], [543, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[545, 2, 1, "", "ToString"], [546, 2, 1, "", "attr_name"], [547, 2, 1, "", "bound_low"], [548, 2, 1, "", "bound_up"], [549, 2, 1, "", "copy"], [550, 2, 1, "", "from_data"], [551, 2, 1, "", "from_json"], [552, 2, 1, "", "from_jsonstring"], [553, 2, 1, "", "key"], [554, 2, 1, "", "sha256"], [555, 2, 1, "", "start_value"], [556, 2, 1, "", "to_data"], [557, 2, 1, "", "to_json"], [558, 2, 1, "", "to_jsonstring"], [559, 2, 1, "", "validate_data"], [560, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[562, 1, 1, "", "FormArtist"], [580, 1, 1, "", "Plotter"], [592, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[563, 2, 1, "", "build"], [564, 2, 1, "", "build_as"], [565, 2, 1, "", "clear"], [566, 2, 1, "", "clear_edges"], [567, 2, 1, "", "clear_nodes"], [568, 2, 1, "", "draw"], [569, 2, 1, "", "draw_collection"], [570, 2, 1, "", "draw_edgelabels"], [571, 2, 1, "", "draw_edges"], [572, 2, 1, "", "draw_loads"], [573, 2, 1, "", "draw_nodelabels"], [574, 2, 1, "", "draw_nodes"], [575, 2, 1, "", "draw_reactions"], [576, 2, 1, "", "redraw"], [577, 2, 1, "", "register"], [578, 2, 1, "", "update_data"], [579, 2, 1, "", "viewbox"]], "compas_cem.plotters.Plotter": [[581, 2, 1, "", "add"], [582, 2, 1, "", "add_from_list"], [583, 2, 1, "", "draw"], [584, 2, 1, "", "find"], [585, 2, 1, "", "on"], [586, 2, 1, "", "pause"], [587, 2, 1, "", "redraw"], [588, 2, 1, "", "register_listener"], [589, 2, 1, "", "save"], [590, 2, 1, "", "show"], [591, 2, 1, "", "zoom_extents"]], "compas_cem.plotters.TopologyArtist": [[593, 2, 1, "", "build"], [594, 2, 1, "", "build_as"], [595, 2, 1, "", "clear"], [596, 2, 1, "", "clear_edges"], [597, 2, 1, "", "clear_nodes"], [598, 2, 1, "", "draw"], [599, 2, 1, "", "draw_collection"], [600, 2, 1, "", "draw_edgelabels"], [601, 2, 1, "", "draw_edges"], [602, 2, 1, "", "draw_loads"], [603, 2, 1, "", "draw_nodelabels"], [604, 2, 1, "", "draw_nodes"], [605, 2, 1, "", "redraw"], [606, 2, 1, "", "register"], [607, 2, 1, "", "update_data"], [608, 2, 1, "", "viewbox"]], "compas_cem.supports": [[609, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[610, 2, 1, "", "ToString"], [611, 2, 1, "", "copy"], [612, 2, 1, "", "from_data"], [613, 2, 1, "", "from_json"], [614, 2, 1, "", "from_jsonstring"], [615, 2, 1, "", "from_point"], [616, 2, 1, "", "sha256"], [617, 2, 1, "", "to_data"], [618, 2, 1, "", "to_json"], [619, 2, 1, "", "to_jsonstring"], [620, 2, 1, "", "validate_data"], [621, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 626], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 362, 395, 488, 504, 520, 536], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20, 21], "diagram": 14, "element": 15, "edg": [15, 50, 187], "node": [15, 114, 255, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": [19, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591], "artist": 19, "support": 20, "viewer": 21, "visual": 21, "object": 21, "formdiagram": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "tostr": [23, 151, 301, 314, 327, 342, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 610], "add_edg": [24, 152], "add_nod": [25, 154], "adjacency_matrix": [26, 156], "clear": [27, 160, 565, 595], "complement": [28, 161], "connected_edg": [29, 163], "connectivity_matrix": [30, 165], "copi": [31, 166, 302, 315, 328, 343, 356, 375, 389, 408, 434, 451, 468, 482, 498, 514, 530, 549, 611], "count_cross": [32, 167], "degre": [33, 168], "degree_in": [34, 169], "degree_matrix": [35, 170], "degree_out": [36, 171], "delete_edg": [37, 172], "delete_nod": [38, 173], "edge_attribut": [39, 40, 175, 176], "edge_coordin": [41, 177], "edge_direct": [42, 178], "edge_forc": [43, 179], "edge_length": [44, 180], "edge_length_2": [45, 181], "edge_midpoint": [46, 182], "edge_point": [47, 183], "edge_sampl": [48, 184], "edge_vector": [49, 186], "edges_attribut": [51, 52, 188, 189], "edges_wher": [53, 190], "edges_where_pred": [54, 191], "embed_in_plan": [55, 192], "find_cross": [56, 193], "find_cycl": [57, 194], "from_data": [58, 195, 303, 316, 329, 344, 357, 376, 390, 409, 435, 452, 469, 483, 499, 515, 531, 550, 612], "from_edg": [59, 196], "from_json": [60, 197, 304, 317, 330, 345, 358, 377, 391, 410, 436, 453, 470, 484, 500, 516, 532, 551, 613], "from_jsonstr": [61, 198, 305, 318, 331, 346, 359, 378, 392, 411, 437, 454, 471, 485, 501, 517, 533, 552, 614], "from_lin": [62, 199, 306, 332], "from_networkx": [63, 200], "from_nodes_and_edg": [64, 201], "from_obj": [65, 202], "from_pointcloud": [66, 203], "from_topology_diagram": 67, "get_any_edg": [68, 69, 204, 205], "get_any_nod": [70, 71, 206, 207], "gkei": [72, 208], "gkey_kei": [73, 209], "has_edg": [74, 210], "has_nod": [75, 211], "index_kei": [76, 212], "index_uv": [77, 213], "is_connect": [78, 215], "is_cross": [79, 216], "is_leaf": [80, 218], "is_node_connect": [81, 219], "is_node_load": [82, 220], "is_node_support": [83, 222], "is_planar": [84, 223], "is_planar_embed": [85, 224], "is_xi": [86, 226], "key_gkei": [87, 227], "key_index": [88, 228], "laplacian_matrix": [89, 229], "leav": [90, 230], "loaded_nod": [91, 231], "neighborhood": [92, 232], "neighbor": [93, 233], "neighbors_in": [94, 234], "neighbors_out": [95, 235], "network_adjacency_matrix": [96, 236], "network_connectivity_matrix": [97, 237], "network_degree_matrix": [98, 238], "network_embed_in_plan": [99, 239], "network_is_planar": [100, 240], "network_is_planar_embed": [101, 241], "network_laplacian_matrix": [102, 242], "node_attribut": [103, 104, 243, 244], "node_coordin": [105, 245], "node_exist": [106, 246], "node_gkei": [107, 247], "node_kei": [108, 248], "node_laplacian": [109, 249], "node_load": [110, 250], "node_neighborhood_centroid": [111, 251], "node_sampl": [112, 252], "node_xyz": [113, 254], "nodes_attribut": [115, 116, 256, 257], "nodes_wher": [117, 258], "nodes_where_pred": [118, 259], "number_of_edg": [119, 262], "number_of_loaded_nod": [120, 263], "number_of_nod": [121, 264], "number_of_support_nod": [122, 265], "reaction_forc": [123, 269], "sha256": [124, 272, 307, 320, 333, 348, 363, 380, 396, 422, 439, 456, 473, 489, 505, 521, 537, 554, 616], "shortest_path": [125, 273], "smooth": [126, 274], "split_edg": [127, 275], "summari": [128, 276], "support_nod": [129, 277], "to_data": [130, 278, 308, 321, 334, 349, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 617], "to_json": [131, 279, 309, 322, 335, 350, 366, 383, 399, 425, 442, 459, 476, 492, 508, 524, 540, 557, 618], "to_jsonstr": [132, 280, 310, 323, 336, 351, 367, 384, 400, 426, 443, 460, 477, 493, 509, 525, 541, 558, 619], "to_lin": [133, 281], "to_networkx": [134, 282], "to_nodes_and_edg": [135, 283], "to_obj": [136, 284], "to_point": [137, 285], "transform": [138, 139, 288, 289], "unset_edge_attribut": [140, 290], "unset_node_attribut": [141, 291], "update_dea": [142, 292], "update_default_edge_attribut": [143, 293], "update_default_node_attribut": [144, 294], "update_dna": [145, 295], "update_node_xyz": [146, 296], "uv_index": [147, 297], "validate_data": [148, 298, 311, 324, 337, 352, 368, 385, 401, 427, 444, 461, 478, 494, 510, 526, 542, 559, 620], "validate_json": [149, 299, 312, 325, 338, 353, 369, 386, 402, 428, 445, 462, 479, 495, 511, 527, 543, 560, 621], "topologydiagram": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "add_load": 153, "add_support": 155, "auxiliary_trail_edg": 157, "auxiliary_trail": 158, "build_trail": 159, "connected_deviation_edg": 162, "connected_trail_edg": 164, "deviation_edg": 174, "edge_sequ": 185, "is_auxiliary_trail_edg": 214, "is_deviation_edg": 217, "is_node_origin": 221, "is_trail_edg": 225, "node_sequ": 253, "number_of_auxiliary_trail": 260, "number_of_deviation_edg": 261, "number_of_trail_edg": 266, "number_of_trail": 267, "origin_nod": 268, "sequence_max": 270, "sequenc": 271, "trail_edg": 286, "trail": 287, "deviationedg": [300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "from_point": [319, 615], "trailedg": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "static_equilibrium": 339, "static_equilibrium_numpi": 340, "nodeload": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353], "from_point_and_vector": 347, "deviationedgelengthconstraint": [354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "kei": [360, 379, 393, 438, 455, 472, 486, 502, 518, 534, 553], "penalti": [361, 394, 487, 503, 519, 535], "target": [364, 397, 490, 506, 522, 538], "deviationedgeparamet": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "attr_nam": [372, 431, 448, 465, 546], "bound_low": [373, 432, 449, 466, 547], "bound_up": [374, 433, 450, 467, 548], "start_valu": [381, 440, 457, 474, 555], "lineconstraint": [387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "add_constraint": 405, "add_paramet": 406, "check_optimization_san": 407, "gradient_func": 412, "index_paramet": 413, "number_of_constraint": 414, "number_of_paramet": 415, "objective_func": 416, "optimization_bound": 417, "optimization_paramet": 418, "parameter_index": 419, "remove_constraint": 420, "remove_paramet": 421, "solve_nlopt": 423, "originnodexparamet": [429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445], "originnodeyparamet": [446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462], "originnodezparamet": [463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479], "planeconstraint": [480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "pointconstraint": [496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511], "reactionforceconstraint": [512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527], "trailedgeforceconstraint": [528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "trailedgeparamet": [544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560], "solve_nlopt_proxi": 561, "formartist": [562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579], "build": [563, 593], "build_a": [564, 594], "clear_edg": [566, 596], "clear_nod": [567, 597], "draw": [568, 583, 598], "draw_collect": [569, 599], "draw_edgelabel": [570, 600], "draw_edg": [571, 601], "draw_load": [572, 602], "draw_nodelabel": [573, 603], "draw_nod": [574, 604], "draw_react": 575, "redraw": [576, 587, 605], "regist": [577, 606], "update_data": [578, 607], "viewbox": [579, 608], "add": 581, "add_from_list": 582, "find": 584, "paus": 586, "register_listen": 588, "save": 589, "show": 590, "zoom_ext": 591, "topologyartist": [592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608], "nodesupport": [609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621], "changelog": 622, "unreleas": 622, "0": 622, "5": 622, "4": [622, 626], "1": [622, 626], "2": [622, 626], "15": 622, "14": 622, "13": 622, "12": 622, "11": 622, "9": 622, "6": 622, "3": [622, 626], "cite": 623, "author": 623, "exampl": 624, "compa": [625, 626], "cem": [625, 626], "main": 625, "featur": 625, "credit": 625, "tabl": 625, "content": 625, "instal": 626, "creat": 626, "virtual": 626, "environ": 626, "activ": 626, "via": 626, "conda": 626, "pip": 626, "plugin": 626, "remov": 626, "ani": 626, "leftov": 626, "link": 626, "check": 626, "your": 626, "updat": 626, "licens": 627}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})